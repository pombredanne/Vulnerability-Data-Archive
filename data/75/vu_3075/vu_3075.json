{
  "Author": "This document was written by James T Ellis.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "CA-1996-25",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1999-01-05T17:20:07-05:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1999-02-15T09:10:28-05:00",
  "DatePublic": "",
  "Description": "Yes, it's real, albeit in my opinion quite minor.  The TryNullMXList (w)\noption defaults off, and there is no danger in the off => on case, just\nthe on => off case.  He's grasping at straws.  (This is what djb\nnoted in INFO#96.27669.)\n\nFirst, there is a(nother) security fix, this one fortunately fairly\nsmall, having to do with hard links.  There are really two attacks\nusing a similar vector, both involving finding files on which you have\ngroup write permission.  I'm not going to go into details here, other\nthan to say that the fix is to insist that all sensitive files have\na link count == 1.  This may break some installations.  Workarounds\ninclude setting the UnsafeGroupWrites option (which should probably\nbe the default, sigh) or setting the DontInitGroups, which works by a\nfluke.  (This is the description of the problem that the advisory\nis being written for - lrr.)",
  "ID": "VU#3075",
  "IDNumber": "3075",
  "IPProtocol": "",
  "Impact": "An attacker can gain group permissions of another user, if the\nattacked user has a file that is group writable by the attacker on\nthe same filesystem as either (a) the attacker's home directory, or\n(b) a :include: file that is referenced directly from the aliases\nfile and is in a directory writable by the attacker. The first\n(.forward) attack only works against root. N.B.: this attack does\nnot give you root \"owner\" permissions, but does give you access to\nthe groups that list root in /etc/group.",
  "Keywords": [
    "sendmail",
    "permissions"
  ],
  "Overview": "",
  "References": [
    "Upgrade to sendmail 8.8.4",
    "ub/ausce",
    "ftp://ftp.auscert.org.au/pub/auscert/advisory/AA-96.15.sendmail.group.perms.vul"
  ],
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "sendmail.group.permissions",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "Set the UnsafeGroupWrites option in the sendmail.cf file. This\noption tells sendmail that group-writable files should not be\nconsidered safe for mailing to programs or files, causing sendmail\nto refuse to run any programs referenced from group-writable files. Setting this option is a good idea in any case, but may require\nthat your users tighten permissions on their .forward files and\n:include: files."
}