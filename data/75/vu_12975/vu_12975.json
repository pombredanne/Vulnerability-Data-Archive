{
  "Author": "This document was written by James T Ellis.",
  "CAM_AttackerAccessRequired": "10",
  "CAM_EaseOfExploitation": "10",
  "CAM_Exploitation": "0",
  "CAM_Impact": "6",
  "CAM_InternetInfrastructure": "10",
  "CAM_Population": "20",
  "CAM_ScoreCurrent": 2.475,
  "CAM_ScoreCurrentWidelyKnown": 6.75,
  "CAM_ScoreCurrentWidelyKnownExploited": 11.25,
  "CAM_WidelyKnown": "1",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1999-01-05T17:27:56-05:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "2003-09-22T17:32:00-04:00",
  "DatePublic": "",
  "Description": "Email from Dave Borman (<dab@BSDI.COM>)\n\n> I was running a test program and wrote 1 byte to a TCP socket\n> with the MSG_EOR flag specified (using send()) and this caused\n> BSD/OS 3.0 to reboot.  The client and server were both on this\n> same host.  Nothing was output to the console or to the\n> /var/log/messages file.  I was running as a normal user,\n> without superuser privileges.\n\nThe panic was \"m_copydata\".  The problem is that when you\nset MSG_EOR, it sets the M_EOR flag in the mbuf chain.  When\nsbappend() is called, if it finds M_EOR at the end of the\nsocket buffer, it calls sbappendrecord(), which links the\nnew data in via the m_nextpkt field.  Later in tcp_output(),\nbecause we're dealing with a small amount of data, we call\nm_copydata().  The problem is that m_copydata() doesn't know\nanything about m_nextpkt, so it thinks that it got to the end\nof the socket buffer before it had copied the requested amount\nof data, and it panics.",
  "ID": "VU#12975",
  "IDNumber": "12975",
  "IPProtocol": "",
  "Impact": "Local user can crash machine",
  "Keywords": [
    "MSG_EOR",
    "IP",
    "crash",
    "DoS",
    "send",
    "m_copydata",
    "m_nextpkt"
  ],
  "Overview": "",
  "References": "",
  "Resolution": "",
  "Revision": 2,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "BSD_kernel_panic",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "From Dave Borman,\nMy fix is not to educate m_copydata() about m_nextpkt, but\ninstead to clear M_EOR from the mbuf in tcp_usrreq(), just\nbefore calling sbappend() (for both PRU_SEND and PRU_SENDOOB)."
}