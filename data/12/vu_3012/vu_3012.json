{
  "Author": "",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "http://www.cert.org/advisories/CA-96.12.suidperl_vul.html",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1998-05-21T11:36:04-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1999-02-15T09:09:02-05:00",
  "DatePublic": "",
  "Description": "See:\n[#96.13003]/[#96.13014]\n[#96.13310]/[#96.13318]\n[#96.13408]/[#96.13421]\n[#96.13479]/[#96.13487]\n[#96.13555]/[#96.14141]\n\n\nIn a nutshell, the problem related to the preservation of the saved\nsetuid.\n\nIn systems that do NOT have this concept, setuid programs can\npermanently relinquish privileges either by using setuid() or\nsetreuid().\n\nIn systems that do understand saved setuids, setuid() will\noverwrite the effective and real uid, but under many conditions NOT\nthe saved setuid. (These conditions are not always clear - for\ninstance, the POSIX specifications don't seem to be particularly\nclear on what these conditions are.)  This means that even if the\nprogrammer relinquishes privileges using setuid(), the saved setuid\nvalue will not be wiped.  This in turn means that the program still\nhas permission to set the effective uid back to the original\neffective uid (which is stored in the saved setuid).  Overcoming\nthis problem seems to be platform dependent, and not always easy.\nFortunately on BSD-like systems at least, this problem can be\novercome by using setreuid, which can overwrite all three by using\nan explicit value for the real and effective uid (although why THIS\nis the case is not completely clear either).",
  "ID": "VU#3012",
  "IDNumber": "3012",
  "IPProtocol": "",
  "Impact": "Any user with shell access can gain root in about 2 seconds\nif suidperl is available on a system that supports saved setuids.\nFreeBSD ships with this program in /usr/bin, and a perl5 port is\nalso commonly installed with the similar vulnerability.\n\nThis has not been verified elsewhere, but it likely affects\nNetBSD, BSDI, Linux, and possibly Solaris (although solaris\ndoesn't require suidperl for other reasons, so it's not typically\ninstalled).  More research needs to be done to assess which\nvendors are vulnerable.",
  "Keywords": [
    "perl",
    "saved suid",
    "saved sgid"
  ],
  "Overview": "",
  "References": "",
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "saved-setuid",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "See:\n[#96.13003]/[#96.13014]\n[#96.13310]/[#96.13318]\n[#96.13408]/[#96.13421]\n[#96.13479]/[#96.13487]\n[#96.13555]/[#96.14141]"
}