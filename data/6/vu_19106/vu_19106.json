{
  "Author": "This document was written by Shawn V Hernan.",
  "CAM_AttackerAccessRequired": "1",
  "CAM_EaseOfExploitation": "10",
  "CAM_Exploitation": "10",
  "CAM_Impact": "12",
  "CAM_InternetInfrastructure": "5",
  "CAM_Population": "17",
  "CAM_ScoreCurrent": 1.1475,
  "CAM_ScoreCurrentWidelyKnown": 1.33875,
  "CAM_ScoreCurrentWidelyKnownExploited": 1.72125,
  "CAM_WidelyKnown": "15",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1998-05-21T11:52:18-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "2001-11-05T21:57:00-05:00",
  "DatePublic": "",
  "Description": "From the OpenBSD advisory:\n\nProcfs provides a filesystem interface to processes on a system.\nUsed by process tools such as ps and ptrace to modify processes\nwhile they are running.  The securelevel flag is set to 0 for\ninitializations, during which time flexibility is required to\nmodify system files.  After that, the securelevel flag is always\nset to greater than zero, at which point not even superuser can\nlower the flag.  Thus, even if the machine is root compromised,\ncertain actions, such as changing \"immutable\" files are not allowed.\n\nHowever, there is a bug that allows the superuser to modify the\nrunning init process, which has the ability to change the\nsecurelevel flag.  The superuser can open the \"mem\" file of the\ninit process and alter the executable code of the running process\nin its text segment.  The easiest point to do this is in the\nmulituser() function.\n\nif(getsecuritylevel() == 0)\nsetsecuritylevel(1);\n\nTwo changes are made - one to cause the \"if\" statement to be true\nafter the system has switched to multiuser mode, and another to\nchange the value passed to the setsecuritylevel() function.\n\nif(getsecuritylevel() != 0)\nsetsecuritylevel(0);\n\nThe init program is a finite state machine driven by function pointers.\nThe program can be forced to call multi_user() by setting a function\npointer (using the \"mem\" file again) to the address of this routine. The\nnext time \"init\" changes state, it will call multi_user() and reduce the\nsecurelevel.",
  "ID": "VU#19106",
  "IDNumber": "19106",
  "IPProtocol": "",
  "Impact": "The hole can be used by anyone who has superuser privileges on the system\nto change immutable files.",
  "Keywords": [
    "procfs",
    "immutable files",
    "init"
  ],
  "Overview": "",
  "References": [
    "ftp://ftp.freebsd.org/pub/FreeBSD/CERT/advisories/FreeBSD-SA-97:04.procfs.asc",
    "ftp://freebsd.org/pub/CERT/patches/SA-97:04/",
    "http://www.netspace.org/cgi-bin/wa?A2=ind9708d&L=bugtraq&F=&S=&P=2998"
  ],
  "Resolution": "",
  "Revision": 2,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "procfs",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "A workaround is to disable the mounting of procfs. To achieve this,\nedit the file /etc/fstab and put a '#' in front of the line proc            /proc           procfs  rw 0 0 Note that when you do that, some utilities may either not work\nanymore or have a limited functionality. As a fix, one can disallow procfs from writing to the init process\nfiles by taking away write privileges when the effected process's ID is\n1 (init process ID). Alternatively, one can disallow the init process from lowering the\nsecurelevel at all. However, this reduces functionality and may\nnot be a workable solution if one has to make considerable changes\nafter switching to single user mode."
}