{
  "Author": "This document was written by Jeff Gennari.",
  "CAM_AttackerAccessRequired": "20",
  "CAM_EaseOfExploitation": "10",
  "CAM_Exploitation": "0",
  "CAM_Impact": "19",
  "CAM_InternetInfrastructure": "5",
  "CAM_Population": "15",
  "CAM_ScoreCurrent": 21.375,
  "CAM_ScoreCurrentWidelyKnown": 26.71875,
  "CAM_ScoreCurrentWidelyKnownExploited": 48.09375,
  "CAM_WidelyKnown": "15",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2006-0435",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2006-01-27T13:03:01-05:00",
  "DateFirstPublished": "2006-01-27T15:45:59-05:00",
  "DateLastUpdated": "2006-05-02T15:16:00-04:00",
  "DatePublic": "2006-01-25T00:00:00",
  "Description": "",
  "ID": "VU#169164",
  "IDNumber": "169164",
  "IPProtocol": "",
  "Impact": "If a remote attacker sends a specially crafted HTTP request to a vulnerable Oracle installation, that  attacker may be able to execute SQL commands with elevated privileges.",
  "Keywords": [
    "Oracle",
    "PL/SQL Gateway",
    "security bypass",
    "PLSQLExclusion",
    "excluded packages",
    "procedures",
    "HTTP requests",
    "mod_plsql",
    "Oracle_CPU_April_2006"
  ],
  "Overview": "The Oracle PL/SQL Gateway fails to properly validate HTTP requests. This may allow a remote attacker to execute SQL commands on an Oracle database.",
  "References": [
    "http://www.oracle.com/technology/deploy/security/pdf/cpuapr2006.html",
    "https://metalink.oracle.com/",
    "http://secunia.com/advisories/18621/",
    "http://www.securityfocus.com/archive/1/423029",
    "http://www.securityfocus.com/archive/1/archive/1/423819/100/0/threaded",
    "http://lists.grok.org.uk/pipermail/full-disclosure/2006-January/041742.html",
    "http://www.red-database-security.com/advisory/oracle_modplsql_injection.html",
    "http://www.integrigy.com/info/IntegrigySecurityAnalysis-MODPLSQLVuln.pdf",
    "http://www.red-database-security.com/advisory/oracle_cpu_apr_2006.html"
  ],
  "Resolution": "Apply a patch\nThis issue is corrected by the Oracle Critical Patch Update for April 2006.",
  "Revision": 83,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "This vulnerability was reported by David Litchfield of NGSSoftware. Information used in this document came from Integrigy, Alexander Kornbrust of red-database security, and  Vladimir Zakharychev of Webrecruiter.",
  "Title": "Oracle PL/SQL Gateway fails to properly validate HTTP requests",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "0",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "4",
  "VulnerabilityCount": 1,
  "Workarounds": "Set always_describe or PlsqlAlwaysDescribeProcedure parameters to ON Set the always_describe or PlsqlAlwaysDescribeProcedure to ON in the dads.conf file. According to red database security: PlsqlAlwaysDescribeProcedure specifies whether mod_plsql should describe a procedure before trying to execute it. If this is set to \"On\", then mod_plsql will always describe a procedure before invoking it. Otherwise, mod_plsql will only describe a procedure when its internal heuristics have interpreted a parameter type incorrectly. If PlsqlAlwaysDescribeProcedure is enabled, Oracle tries to describe every PL/SQL procedure. If a hacker injects pl/sql code, Oracle tries to describe this specially crafted string but fails because this procedure does not exist. Disable Oracle's HTTP Server As a general rule, disable or remove any nonessential software. In this case, the Oracle HTTP Server (Apache) should be disabled on any Oracle installations that do need to be accessible via HTTP. Limit Access to HTTP Server You may wish to block access to the vulnerable software from outside your network perimeter, specifically by blocking access to the ports used by the Apache HTTP server (typically 80/tcp). This will limit your exposure to attacks. However, blocking at the network perimeter would still allow attackers within the perimeter of your network to exploit the vulnerability. The use of host-based firewalls in addition to network-based firewalls can help restrict access to specific hosts within the network. It is important to understand your network's configuration and service requirements before deciding what changes are appropriate."
}