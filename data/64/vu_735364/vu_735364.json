{
  "Author": "This document was written by Jared Allar.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2013-3576",
  "CVSS_AccessComplexity": "L",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "S",
  "CVSS_AvailabilityImpact": "C",
  "CVSS_BaseScore": 9,
  "CVSS_BaseVector": "AV:N/AC:L/Au:S/C:C/I:C/A:C",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 6.4,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:M/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "H",
  "CVSS_IntegrityImpact": "C",
  "CVSS_RemediationLevel": "W",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "M",
  "CVSS_TemporalScore": 8.5,
  "CVSS_TemporalVector": "E:H/RL:W/RC:C",
  "DateCreated": "2013-04-02T13:11:48-04:00",
  "DateFirstPublished": "2013-06-11T07:33:25-04:00",
  "DateLastUpdated": "2013-09-24T10:30:00-04:00",
  "DatePublic": "2013-06-10T00:00:00",
  "Description": "Markus Wulftange from Daimler TSS reports: The vulnerability is located in the `ginkgosnmp.inc` PHP file in the `C:\\hp\\hpsmh\\data\\smhutil` or  `/opt/hp/hpsmh/data/smhutil` directory, respectively. Inside the `ginkgosnmp.inc` script, the last path segment of the current requested URL path is used in a `exec` call without proper escaping: $tempfilename = \"$sessiondir/\" . substr($_SERVER[\"SCRIPT_URL\"], 1 + strrpos($_SERVER[\"SCRIPT_URL\"], '/')) . uniqid(\".\", true) . time() . \".txt\"; if(\"Linux\" == PHP_OS)\n$cmd = \"../../webapp-data/webagent/csginkgo -f$tempfilename\"; else $windrive = substr( $_SERVER[\"WINDIR\"], 0, 2 ); $cmd = \"$windrive\\\\hp\\\\hpsmh\\\\data\\\\smhutil\\\\csginkgo.exe -f$tempfilename\"; exec( $cmd, $out ); This script is reachable via the URL path `https://<host>:2381/smhutil/snmpchp.php.en`. Due to [Apache\u2019s *MultiViews*] [2] it can also be referenced with any additional path segments after the `snmpchp.php.en` segment: `https://<host>:2381/smhutil/snmpchp.php.en/foo/bar` still triggers `https://<host>:2381/smhutil/snmpchp.php.en` but `$_SERVER[\"SCRIPT_URL\"]` is `https://<host>:2381/smhutil/snmpchp.php.en/foo/bar`. This can be exploited as follows: https://<host>:2381/smhutil/snmpchp.php.en/&&<cmd>&&echo (full file name)\nhttps://<host>:2381/smhutil/snmpchp.php/&&<cmd>&&echo    (without \"en\" language indicator)\nhttps://<host>:2381/smhutil/snmpchp/&&<cmd>&&echo        (without any file name extension) Besides the path segment separator `/`, the characters `<`, `>`, and `|` are also not allowed, which makes exploiting this vulnerability a little hard. https://<host>:2381/smhutil/snmpchp/&&whoami&&echo",
  "ID": "VU#735364",
  "IDNumber": "735364",
  "IPProtocol": "",
  "Impact": "A remote authenticated user may be able to run arbitrary commands on the HP System Management Homepage server.",
  "Keywords": [
    "hp",
    "system",
    "management",
    "homepage",
    "command",
    "injection",
    "cwe-77"
  ],
  "Overview": "HP System Management Homepage contains a command injection vulnerability (CWE-77) that may result in arbitrary command execution and privilege escalation.",
  "References": [
    "https://h20564.www2.hp.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c03895050",
    "http://www.hp.com/go/SMH",
    "http://cwe.mitre.org/data/definitions/77.html"
  ],
  "Resolution": "Apply an Update HP System Management Homepage (SMH) version 7.2.2 and later address this vulnerability. If you cannot upgrade for whatever reason, please consider the following workarounds.",
  "Revision": 19,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to Markus Wulftange from Daimler TSS for reporting this vulnerability.",
  "Title": "HP System Management Homepage contains a command injection vulnerability",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 1,
  "Workarounds": "Restrict Network Access As a general good security practice, only allow connections from trusted hosts and networks. Restricting access would prevent an attacker from connecting to the service from a blocked network location."
}