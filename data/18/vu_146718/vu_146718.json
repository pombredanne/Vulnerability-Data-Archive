{
  "Author": "This document was written by Jeff Gennari based on information from Sendmail.",
  "CAM_AttackerAccessRequired": "20",
  "CAM_EaseOfExploitation": "13",
  "CAM_Exploitation": "0",
  "CAM_Impact": "7",
  "CAM_InternetInfrastructure": "17",
  "CAM_Population": "18",
  "CAM_ScoreCurrent": 13.5135,
  "CAM_ScoreCurrentWidelyKnown": 22.72725,
  "CAM_ScoreCurrentWidelyKnownExploited": 35.01225,
  "CAM_WidelyKnown": "5",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2006-1173",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2006-05-08T13:47:22-04:00",
  "DateFirstPublished": "2006-06-14T12:04:19-04:00",
  "DateLastUpdated": "2011-07-22T08:53:00-04:00",
  "DatePublic": "2006-06-14T00:00:00",
  "Description": "",
  "ID": "VU#146718",
  "IDNumber": "146718",
  "IPProtocol": "",
  "Impact": "This vulnerability will not cause the Sendmail server process to terminate. However, it may cause the Sendmail to consume a large amount of system resources. Specifically, if a system writes uniquely named core dump files,  this vulnerability may cause available disk space to be filled with core dumps leading to a disruption of system operation resulting in a denial-of-service condition. Additionally, this vulnerability may cause queue runs to abort; if this situation were to occur, processing and delivery of queued messages would be prevented.",
  "Keywords": [
    "Sendmail",
    "DoS",
    "denial of service",
    "MIME"
  ],
  "Overview": "Sendmail does not properly handle malformed multipart MIME messages. This vulnerability may allow a remote, unauthenticated attacker to cause a denial-of-service condition.",
  "References": [
    "http://www.sendmail.com/security/advisories/SA-200605-01.txt.asc",
    "http://www.sendmail.org/releases/8.13.7.html",
    "http://www.sendmail.org/releases/8.13.7.html#RS",
    "http://jvn.jp/cert/JVNVU%23146718/index.html",
    "http://secunia.com/advisories/20473/",
    "http://secunia.com/advisories/15779/",
    "http://secunia.com/advisories/20641/",
    "http://secunia.com/advisories/20673/",
    "http://secunia.com/advisories/20650/",
    "http://secunia.com/advisories/20654/",
    "http://secunia.com/advisories/20651/",
    "http://secunia.com/advisories/20683/"
  ],
  "Resolution": "Upgrade Sendmail\nThis issue is corrected in Sendmail version 8.13.7.",
  "Revision": 43,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "This vulnerability was reported by Sendmail.",
  "Title": "Sendmail fails to handle malformed multipart MIME messages",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "4",
  "VulnerabilityCount": 1,
  "Workarounds": "The following workarounds were provided by Sendmail: Limit message size Limiting the maximum message size accepted by your server (via the sendmail MaxMessageSize option) will mitigate this vulnerability. Remove stack size limit If your operating system limits stack size, remove that limit. This will make the attack more difficult to accomplish, as it will require a very large message. Also, by limiting the maximum message size accepted by your server (via the sendmail MaxMessageSize  option), you can eliminate the attack completely. Configure your MTA to avoid the negative impacts listed above: Disable core dumps. Enable the ForkEachJob option at the cost of lower queue run performance and potentially a high number of processes. Set QueueSortOrder to random, which will randomize the order jobs are processed. Note that with random queue sorting, the bad message will still be processed and the queue run aborted every time, but at a different, random spot."
}