{
  "Author": "",
  "CAM_AttackerAccessRequired": "15",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "5",
  "CAM_Impact": "20",
  "CAM_InternetInfrastructure": "8",
  "CAM_Population": "8",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "16",
  "CERTAdvisory": "http://www.cert.org/advisories/CA-97.03.csetup.html",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1998-05-21T11:45:58-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1999-02-14T14:59:07-05:00",
  "DatePublic": "",
  "Description": "While I was freezing my ass off in Ames, IA, making frequent trips\nto video rental store, Jay was doing somethig less lame and found\nan interesting thing: if one does setenv DEBUG_CSETUP 1 and then\nruns csetup, it'll create a file /usr/tmp/csetupLog, owned by root.\nSure enough, it follows symlinks, follows umask if file is\nnonexistant, overwrites existing file keeping original permissions.\ncsetup will display a dialog window on startup, asking for root\npassword.  However, one can press Cancel and it will proceed in\n\"read-only\" mode.  Perhaps it was considered to be enough\nprotection, so it doesn't bother dropping root priviledges.\n\nThe log file looks like\n\nRemote Host: xxx Address : xxx.xxx.xxx.xxx\nSet Initial Timeout (objectserver) : 1\nGet Lego objects Info\nFinished Loading objects info\nNetworking Panel initialization complete!\n\nand there's no easy way to alter its contents, thus no easy way to\nexploit it.  Yet another DoS attack, right?  Well, so we thought.\nOn an ideal OS, it probably is.  But it's Irix.  I felt it more\nthan DoS.  I didn't try too hard to find it, though, and the other\nday I was brushing my teeth and it came by itself.  Log file\ncontains nice text, not just some binary crap.  So from the OS view\npoint it's a shell script.  sh will be invoked to execute it, and\nit'll try to execute command called \"Remote\".  So we can overwrite\nsome system binary and make some program running as root execute\nit.  But one has to have control over PATH for it to be profitable.\nThat's where Irix helps us.  Some may remember an old advisory\nabout sgihelp, it was recommended that people _remove sgihelp_ till\npatch is installed, pretty amazing, huh?  That's because all those\nGUI tools that run as root invoke sgihelp without bothering to\nchange uid first.  Old sgihelp didn't care if uid/euid=0, you can\nimagine what this means.  New one does drop root very early, but it\ndoesn't solve the real problem: many GUI tools calling external\nprogram while euid=0, which is totally unnecessary.  Sure, it's\neasier to fix one program than a whole bunch of them, I'm very lazy\nmyself so I can understand, but there's a price.  One doesn't need\nto go far to find an example, csetup itself does it.  So, do setenv\nDEBUG_CETUP 1, symlink /usr/tmp/casetupLog to /usr/sbin/sgihelp,\nput infamous makesh called \"Remote\" first in your PATH, run csetup.\nAt this point sgihelp is nuked.  Now click on Help button, and\nenjoy.  Remember to make a copy of real sgihelp first.\n\nCan somebody tell me, what is the point of making a program suid if\nit only runs when you know root password?  /usr/Cadmin/bin is full\nof such programs.  They ask for root password on startup, and most\nof them only proceed if valid password is entered.  Why is it\nconsidered to be easier than su + running non-suid program?  It\nallows one to do system administration clicking on nice icons and\ntoolboxes, right.  But it's sure more dangerous, Besides, all these\nprograms require this stupid objectserver thing to hog your memory\n(I don't run it, that's why I didn't look in /usr/Cadmin/bin\nmyself).  You will feel better if you do this:\n\nchmod u-s /usr/Cadmin/bin/*\nchkconfig objectserver off\nkillall objectserver\n\nSome program might miss objectserver, mediad will complain on boot,\nfor example, but it doesn't break anything really, only these GUI\nadmin tools.",
  "ID": "VU#13113",
  "IDNumber": "13113",
  "IPProtocol": "",
  "Impact": "local users can gain root access",
  "Keywords": [
    "SGI",
    "symlinks",
    "overwrite files",
    "root compromise"
  ],
  "Overview": "",
  "References": "bugtraq posting",
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "SGI/csetup",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}