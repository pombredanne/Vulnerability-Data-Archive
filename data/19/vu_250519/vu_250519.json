{
  "Author": "This document was written by Garret Wassermann.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2016-3714",
  "CVSS_AccessComplexity": "M",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "C",
  "CVSS_BaseScore": 9.3,
  "CVSS_BaseVector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 7.30709030016,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:H/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "POC",
  "CVSS_IntegrityImpact": "C",
  "CVSS_RemediationLevel": "OF",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "H",
  "CVSS_TemporalScore": 7.3,
  "CVSS_TemporalVector": "E:POC/RL:OF/RC:C",
  "DateCreated": "2016-05-04T16:11:38-04:00",
  "DateFirstPublished": "2016-05-04T17:11:17-04:00",
  "DateLastUpdated": "2016-05-04T17:23:00-04:00",
  "DatePublic": "2016-05-03T00:00:00",
  "Description": "CWE-20: Improper Input Validation - CVE-2016-3714 According to the researchers in a mailing list post: Insufficient filtering for filename passed to delegate's command allows remote code execution during conversion of several file formats. ImageMagick allows to process files with external libraries. This feature is called 'delegate'. It is implemented as a system() with command string ('command') from the config file delegates.xml with actual value for different params (input/output filenames etc). Due to insufficient %M param filtering it is possible to conduct shell command injection. By causing a system to process an image with ImageMagick, an attacker may be able to execute arbitrary commands on a vulnerable system. A common vulnerable configuration would be a web server that allows image uploads that are subsequently processed with ImageMagick. Exploit code for this vulnerability is publicly available, and according to the ImageTragick website, this vulnerability is already being exploited in the wild.",
  "ID": "VU#250519",
  "IDNumber": "250519",
  "IPProtocol": "",
  "Impact": "An unauthenticated remote attacker that can upload crafted image files may be able to execute arbitrary code in the context of the user calling ImageMagick.",
  "Keywords": [
    "validation",
    "delegate",
    "imagemagick"
  ],
  "Overview": "ImageMagick does not properly validate user input before processing it using a delegate, which may lead to arbitrary code execution. This issue is also known as \"ImageTragick\".",
  "References": [
    "https://imagetragick.com/",
    "https://www.imagemagick.org/discourse-server/viewtopic.php?f=4&t=29588",
    "http://www.openwall.com/lists/oss-security/2016/05/03/18"
  ],
  "Resolution": "Apply an Update ImageMagick version 6.9.3-10 and 7.0.1-1 have been released to address these issues. Affected users should update to the latest version of ImageMagick as soon as possible. However, affected users may also apply the following mitigations:",
  "Revision": 21,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "The ImageTragick website credits Stewie and Nikolay Ermishkin of the Mail.Ru Security Team for discovering these vulnerabilities.",
  "Title": "ImageMagick does not properly validate input before processing images using a delegate",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "0",
  "VRDA_D1_Impact": "2",
  "VRDA_D1_Population": "2",
  "VulnerabilityCount": 1,
  "Workarounds": "Verify Files and Disable Vulnerable Filters The researchers suggest that this vulnerability may be mitigated by doing the following: 1. Verify that all image files begin with the expected \"magic bytes\" corresponding to the image file types you support before sending them to ImageMagick for processing. 2. Use a policy file to disable the vulnerable ImageMagick coders. For more details, please see https://imagetragick.com/"
}