{
  "Author": "This document was written by Jared Allar.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2013-0129",
  "CVSS_AccessComplexity": "M",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "N",
  "CVSS_BaseScore": 4.3,
  "CVSS_BaseVector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "N",
  "CVSS_EnvironmentalScore": 2.9,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:M/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "ND",
  "CVSS_IntegrityImpact": "P",
  "CVSS_RemediationLevel": "U",
  "CVSS_ReportConfidence": "UC",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "M",
  "CVSS_TemporalScore": 3.9,
  "CVSS_TemporalVector": "E:ND/RL:U/RC:UC",
  "DateCreated": "2013-03-08T12:33:32-05:00",
  "DateFirstPublished": "2013-04-15T15:51:38-04:00",
  "DateLastUpdated": "2013-04-15T16:15:00-04:00",
  "DatePublic": "2013-03-08T00:00:00",
  "Description": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') pd-admin, contains cross-site scripting (XSS) vulnerabilities. The vulnerability report provided by Thomas Roth states: Reflective cross-site scripting\nWhen pasting the string below into the 'Create new directory' textfield (found under 'WebFTP' -> 'Overview'), the error page will include the attacker supplied JavaScript code. \"><script>alert(\"XSS\");</script> Stored cross-site scripting\nWhen storing the string below as the body for an e-mail autoresponder, every time someone tries to change the text of the autoresponder, the attacker supplied JavaScript code will execute. By tricking a (higher privileged) support contact into looking at it, the attacker might be able to steal the support contact's session cookie. </textarea> <script> alert(\"XSS\");</script>",
  "ID": "VU#311644",
  "IDNumber": "311644",
  "IPProtocol": "",
  "Impact": "An attacker may be able to exploit the cross-site scripting vulnerability to result in information leakage, privilege escalation, and/or denial of service on the host computer.",
  "Keywords": [
    "pd-admin",
    "xss",
    "cwe-79"
  ],
  "Overview": "pd-admin, a web interface for users of hosting providers, is susceptible to cross-site scripting (XSS) vulnerabilities.",
  "References": [
    "http://www.pdadmin-forum.de/thread.php?threadid=4051",
    "http://www.pd-admin.de/",
    "http://cwe.mitre.org/data/definitions/79.html"
  ],
  "Resolution": "Apply an Update pd-admin 4.17 has been released to address these vulnerabilities.",
  "Revision": 18,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to Thomas Roth for reporting this vulnerability.",
  "Title": "pd-admin contains cross-site scripting vulnerabilities",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 1,
  "Workarounds": "Restrict access As a general good security practice, only allow connections from trusted hosts and networks. Note that restricting access does not prevent XSS attacks since the attack comes as an HTTP request from a legitimate user's host. Restricting access would prevent an attacker from accessing the web interface using stolen credentials from a blocked network location."
}