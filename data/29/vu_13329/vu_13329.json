{
  "Author": "This document was written by new-vul.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1998-05-21T11:27:48-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1998-05-21T11:27:13+00:00",
  "DatePublic": "",
  "Description": "With SunOS release 4.1, Sun began including the traditional SysV\noperating system debugging tool \"crash\".  They ship systems with\nthis utility permitted 2755 (set-gid, world-execute) with group\nkmem.",
  "ID": "VU#13329",
  "IDNumber": "13329",
  "IPProtocol": "",
  "Impact": "Installed this way, crash allows any system user to use it to\nexamine system memory, including the memory of other users'\nprocesses. Furthur, since crash allows shell escapes (eg \"!sh\")\nwithout clearing group membership, any system user can use crash to\nassume group kmem. Being in group kmem gives a process read access to 5 devices (drum,\ndump, eeprom, kmem, and mem) and read-write to one of those (dump). Reading from these devices gains one access to various secret\ninformation. /dev/drum is the virtual memory space; /dev/eeprom is\nthe eeprom chip (with the eeprom password); /dev/kmem is the kernel\nimage; /dev/mem is the system physical memory. Unfortunately, /dev/dump is not documented. It appears to contain\na system image, like /dev/drum or /dev/mem. It may be an image of\nthe dump space on disk, which doubles as swap space, making it\nmuch like /dev/drum. It is not clear without documentation or\nexamination of the source what could be done with write access to\nit. (This fact makes it harder to estimate the damage done, but\nalso makes the system harder to damage.) In any case, the encrypted form of passwords is almost always\navailable in memory on our systems [which run with shadow password\nfiles]. Furthur, the plaintext of passwords of people who have\nrecently signed on (or maybe ever signed on) is visible in at\nleast /dev/dump. Also, the eeprom password is visible in\n/dev/eeprom. With sufficient skill, the eeprom password is sufficient to obtain\nroot privileges. (This skill is the same as required to obtain root\non machines without eeprom passwords, like 3/50s.) Once a process has group kmem, it can create other files which are\nsetgid kmem, leaving back doors, much like someone with root can\nleave root backdoors.",
  "Keywords": [
    "panic",
    "kernal",
    "crash",
    "mbuf",
    "kmem",
    "mclput"
  ],
  "Overview": "",
  "References": "",
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "crash_me",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "as root:            chmod 600 /usr/kvm/crash"
}