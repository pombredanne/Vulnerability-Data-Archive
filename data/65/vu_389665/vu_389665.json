{
  "Author": "This document was written by Art Manion and Shawn V. Hernan.",
  "CAM_AttackerAccessRequired": "15",
  "CAM_EaseOfExploitation": "15",
  "CAM_Exploitation": "0",
  "CAM_Impact": "17",
  "CAM_InternetInfrastructure": "12",
  "CAM_Population": "11",
  "CAM_ScoreCurrent": 11.0446875,
  "CAM_ScoreCurrentWidelyKnown": 25.245,
  "CAM_ScoreCurrentWidelyKnownExploited": 41.023125,
  "CAM_WidelyKnown": "2",
  "CERTAdvisory": "CA-2002-36",
  "CVEIDs": "CVE-2002-1357",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2002-10-11T13:27:56-04:00",
  "DateFirstPublished": "2002-12-16T12:58:48-05:00",
  "DateLastUpdated": "2004-06-29T18:03:00-04:00",
  "DatePublic": "2002-12-16T00:00:00",
  "Description": "",
  "ID": "VU#389665",
  "IDNumber": "389665",
  "IPProtocol": "",
  "Impact": "The impact will vary for different vulnerabilities, but in some cases remote attackers could execute arbitrary code with the privileges of the SSH process. Both SSH servers and clients are affected. On Windows systems, SSH servers commonly run with SYSTEM privileges. SSH daemons on UNIX systems typically run with root privileges. In the case of SSH clients, any attacker-supplied code would run with the privileges of the user who started the client program. Additional privileges may be afforded to an attacker when the SSH client is configured to run with an effective user ID (setuid/setgid) of root. Attackers could also crash a vulnerable SSH process, causing a denial of service. While OpenSSH does not appear to be affected, it is worth noting that privilege separation would greatly reduce the impact of arbitrary code execution during the KEXINIT phase.",
  "Keywords": [
    "SSH",
    "greeting and key-exchange-initialization phase",
    "transport layer",
    "KEXINIT",
    "handshake",
    "ssh transport protocol"
  ],
  "Overview": "Secure shell (SSH) transport layer protocol implementations from different vendors contain multiple vulnerabilities in code that handles key exchange and initialization. Both SSH servers and clients are affected. A remote attacker could execute arbitrary code with the privileges of the SSH process or cause a denial of service.",
  "References": [
    "http://www.rapid7.com/advisories/R7-0009.txt",
    "http://www.rapid7.com/perl/DownloadRequest.pl?PackageChoice=666",
    "http://www.ietf.org/internet-drafts/draft-ietf-secsh-transport-15.txt",
    "http://www.ietf.org/internet-drafts/draft-ietf-secsh-architecture-13.txt",
    "http://www.citi.umich.edu/u/provos/ssh/privsep.html"
  ],
  "Resolution": "Upgrade or Apply Patch Upgrade or apply a patch as specified by your vendor.",
  "Revision": 39,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "The CERT/CC thanks Rapid7 for researching and reporting these vulnerabilities.",
  "Title": "Multiple vendors' SSH transport layer protocol implementations contain vulnerabilities in key exchange and initialization",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "Restrict Access Until patches or upgrades are available, it may be possible to limit access to vulnerable SSH clients and servers using the built-in facilities of some SSH implementations, firewalls, packet-filters, TCP Wrappers, or other similar technology. Note that this workaround will not prevent exploitation of these vulnerabilities, it will only limit the number of potential sources of attacks. Do Not Trust DNS SSH clients can reduce the risk of attacks by only connecting to trusted servers by IP address. Again, this will not prevent attacks, but it will remove the ability of an attacker to redirect a client using DNS cache poisoning or by compromising a DNS server."
}