{
  "Addendum": "There are no additional comments at this time.",
  "DateLastUpdated": "2007-06-01T10:11:00-04:00",
  "DateNotified": "2007-04-17T16:04:10-04:00",
  "DateResponded": "",
  "ID": "VU#821865",
  "Revision": 2,
  "Status": "Vulnerable",
  "Vendor": "CREDANT Technologies, Inc.",
  "VendorInformation": "We are not aware of further vendor information regarding this vulnerability.",
  "VendorRecordID": "MIMG-72CRM4",
  "VendorReferences": "",
  "VendorStatement": "CREDANT Technologies takes security seriously and appreciates this opportunity \nto explain how we addressed VU#821865. In addition to ongoing security reviews \nby development and QA, CREDANT Mobile Guardian (CMG) is also subject to \nperiodic third party code reviews. Though preventing security vulnerabilities \nis our primary goal, we are aware that issues can slip through, which is why we \nfrequently review both existing and new product functions and code. Because we focus on data encryption, CREDANT has done significant work to \nensure on-going reviews around code and functions, including those supporting \nauthentication of authorized users. In addition to leveraging existing \nMicrosoft Windows domain authentication mechanisms, CREDANT's development \nprocess includes a variety of best practices to identify and quickly address \nany issues that may be introduced whether they are a result of adding new \nfeatures or regular product maintenance. One of these best practices is the \nrequirement of internal peer audits any time a code change is made that could \ninteract with authentication credential processing. These reviews are designed \nto check for a variety of issues and to ensure that we: - hold credentials in memory for the least amount of time possible\n- create a hash of any credentials that must be held in memory\n- zero out any memory immediately after processing authentication credentials Per our procedures, passwords used by the Windows Shield were hashed before \nbeing held in memory, but there were some instances where we failed to clear \nthe memory containing the original password used to create the hash. This \nissue was identified in a regular internal code review and was confirmed by a \ncustomer report on April 4, 2007 and by the CERT notification on April 17, \n2007. CREDANT provided a test build fix to the reporting customer around April \n19, 2007 and a final fix went into our CMG Enterprise Edition 5.2.1 SP1 release \non May 1, 2007. To prevent a recurrence of this issue, CREDANT also added some \ncore memory management functionality to our product to help ensure automatic \nclearing of memory in many cases. Our encryption policy defaults are generally off, which is driven by customer \ndemand that we allow them to decide what the acceptable risk is in their \nenvironment. Though this drove our decision to set the \"Encrypt Windows Paging \nFile\" default policy to False, our documentation recommends  changing this to \nTrue when encryption is enabled. The CMG Administrator Help includes a section \nof recommended policies by security level, where we suggest policy settings for \nLow, Medium, and High security environments. The recommended value for \"Encrypt \nWindows Paging File\" policy is True for all levels (High, Medium, and Low \nsecurity environments)."
}