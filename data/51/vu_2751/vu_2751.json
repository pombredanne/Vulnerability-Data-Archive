{
  "Author": "This document was written by CN=Lawrence R Rogers/O=CERT.",
  "CAM_AttackerAccessRequired": "20",
  "CAM_EaseOfExploitation": "15",
  "CAM_Exploitation": "15",
  "CAM_Impact": "15",
  "CAM_InternetInfrastructure": "16",
  "CAM_Population": "16",
  "CAM_ScoreCurrent": 49.95,
  "CAM_ScoreCurrentWidelyKnown": 68.85,
  "CAM_ScoreCurrentWidelyKnownExploited": 75.6,
  "CAM_WidelyKnown": "6",
  "CERTAdvisory": "CA-1995-10",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1998-05-21T11:35:46-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "2003-10-28T15:05:00-04:00",
  "DatePublic": "",
  "Description": "The -dSAFER option is incorrectly implemented rendering it usless.",
  "ID": "VU#2751",
  "IDNumber": "2751",
  "IPProtocol": "",
  "Impact": "Postscript files displayed with ghostscript can operate on files\nwritable by the user running ghostscript",
  "Keywords": "ghostscript viewers",
  "Overview": "",
  "References": "",
  "Resolution": "",
  "Revision": 4,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "ghostscript-safer",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "Apply the following patch (which has been tested on 2.6.2 and found to work) --- gs_init.ps.orig\tSun Aug 20 23:22:01 1995\n+++ gs_init.ps\tSun Aug 20 23:22:46 1995\n@@ -302,7 +302,8 @@\n% If we want a \"safer\" system, disable some obvious ways to cause havoc. SAFER not { (%END SAFER) .skipeof } if\n/file\n- { dup (r) eq\n+ { exch dup /..fname exch def exch\n+   dup (r) eq ..fname (%pipe%*) .stringmatch not and\n{ file }\n{ /invalidfileaccess signalerror }\nifelse"
}