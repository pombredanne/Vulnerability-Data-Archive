{
  "Author": "This document was written by Jared Allar.",
  "CAM_AttackerAccessRequired": "12",
  "CAM_EaseOfExploitation": "8",
  "CAM_Exploitation": "4",
  "CAM_Impact": "15",
  "CAM_InternetInfrastructure": "7",
  "CAM_Population": "6",
  "CAM_ScoreCurrent": 1.944,
  "CAM_ScoreCurrentWidelyKnown": 5.022,
  "CAM_ScoreCurrentWidelyKnownExploited": 7.614,
  "CAM_WidelyKnown": "1",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2011-10-13T09:01:11-04:00",
  "DateFirstPublished": "2011-12-02T15:12:01-05:00",
  "DateLastUpdated": "2011-12-02T15:21:00-05:00",
  "DatePublic": "2011-12-02T00:00:00",
  "Description": "According to the SiT! website: \"Support Incident Tracker (or SiT!) is a Free Software/Open Source (GPL) web based application which uses PHP and MySQL for tracking technical support calls/emails (also commonly known as a 'Help Desk' or 'Support Ticket System').\"\nSiT! is susceptible to multiple attacks, including; malicious file uploads, SQL injection, cross-site scripting, and cross-site request forgery. CWE-434: Unrestricted Upload of File with Dangerous Type\nThe incident_attachments.php script does not filter the attachment's extension properly. An attacker may upload any file to the web server and have it run with the privileges of the web service. This vulnerability could be used to upload a PHP shell which may be used as a backdoor. The upload file path is structured in the following way: /attachments-{hash}/{incident ID}/{file ID}-{file name}.{extension}. An attacker would need user access to the website, as well as, brute forcing the attachments folder path. An attacker has two options to retrieve the folder path. The attacker could brute force the default attachments folder name because of a weak generation algorithm or the attacker could use the move_uploaded_file.php script to generate an error message that will include the folder path. The ftp_upload_file.php script is also vulnerable. An attacker may be able to upload any file to the web server and have it run with the privileges of the web service if they can guess the folder path. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\nThe incident_attachments.php script is vulnerable to SQL injection. The attachment file name is not properly sanitized. An attacker may exploit this flaw to execute queries against the database. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\nThe incident_attachments.php script is vulnerable to XSS. An attacker may be able to upload a filename that includes arbitrary script which will be run on the incident attachments web page. The link_add.php script is vulnerable to XSS. An attacker may be able to inject arbitrary script into the link creation page. The translate.php script is vulnerable to XSS. An attacker may inject arbitrary script into a saved translation web page which is then execute with the permissions of the web service. CWE-352: Cross-Site Request Forgery (CSRF)\nThe reporter states that most of the SiT! scripts are vulnerable to CSRF attacks. For example, an attacker may be able to trick a logged in user to visit the following URL to delete a user account:  /user_delete.php?userid=6. It has been reported that all web pages except config.php, edit_user_permissions.php, forgotpwd.php, user_add.php and user_profile_edit.php are vulnerable.",
  "ID": "VU#576355",
  "IDNumber": "576355",
  "IPProtocol": "",
  "Impact": "An attacker may be able to inject arbitrary script, execute commands as a logged in user, or upload malicious files to the web server.",
  "Keywords": "Support Incident Tracker Multiple Vulnerabilities",
  "Overview": "Support Incident Tracker (or SiT!) version 3.65, and possibly earlier versions, contain multiple vulnerabilities including; malicious file uploads, SQL injection, cross-site scripting, and cross-site request forgery.",
  "References": [
    "http://sitracker.org/",
    "http://cwe.mitre.org/data/definitions/434.html",
    "http://cwe.mitre.org/data/definitions/89.html",
    "http://cwe.mitre.org/data/definitions/352.html"
  ],
  "Resolution": "We are currently unaware of a practical solution to this problem.",
  "Revision": 24,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to the reporter that wishes to remain anonymous.",
  "Title": "Support Incident Tracker multiple vulnerabilities",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "2",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}