{
  "Author": "This document was written by Michael Orlando and David Svoboda.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2014-0094",
  "CVSS_AccessComplexity": "L",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "P",
  "CVSS_BaseScore": 7.5,
  "CVSS_BaseVector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "CVSS_CollateralDamagePotential": "L",
  "CVSS_ConfidentialityImpact": "P",
  "CVSS_EnvironmentalScore": 6.86048806962325,
  "CVSS_EnvironmentalVector": "CDP:L/TD:H/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "H",
  "CVSS_IntegrityImpact": "P",
  "CVSS_RemediationLevel": "OF",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "H",
  "CVSS_TemporalScore": 6.5,
  "CVSS_TemporalVector": "E:H/RL:OF/RC:C",
  "DateCreated": "2014-04-24T17:02:27-04:00",
  "DateFirstPublished": "2014-04-25T12:29:59-04:00",
  "DateLastUpdated": "2014-07-24T17:52:00-04:00",
  "DatePublic": "2014-04-24T00:00:00",
  "Description": "Apache Struts2 2.3.16.1 and earlier contain a vulnerability where the ClassLoader allows access to class properties via request parameters. This vulnerability was previously attempted to be addressed in S2-020 ClassLoader manipulation via request parameters. Unfortunately, the correction wasn't sufficient. Struts2 provides a mapping between Web parameters and Java methods. So an attacker could invoke a specific method on a remote Java server by specifying it in a URL. All Java objects have a getClass() method, which returns the object's Class (this object represents classes). Every Class has a ClassLoader, which is the class that loaded the initial class; an attacker could access the ClassLoader using the Class.getClassLoader() method.",
  "ID": "VU#719225",
  "IDNumber": "719225",
  "IPProtocol": "",
  "Impact": "An unauthenticated attacker could manipulate the ClassLoader into disclosing private Class information or possibly load a malicious class file.",
  "Keywords": [
    "apache",
    "struts2",
    "classloader",
    "class"
  ],
  "Overview": "Apache Struts2 2.3.16.1 and earlier contain a vulnerability where the ClassLoader allows access to class properties via request parameters",
  "References": [
    "http://struts.apache.org/announce.html#a20140424",
    "http://blog.trendmicro.com/trendlabs-security-intelligence/chinese-underground-creates-tool-exploiting-apache-struts-vulnerability/"
  ],
  "Resolution": "Update The Apache Struts group has released Struts 2.3.16.2 as a \"General Availability\" release to address this vulnerability. The Apache Struts group is advising all developers to update.",
  "Revision": 14,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "This vulnerability was publicly reported by Apache Struts2.",
  "Title": "Apache Struts2 ClassLoader allows access to class properties via request parameters",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 1,
  "Workarounds": "The vendor has stated the following workaround: A security fix release fully addressing this issue is in preparation and will be released as soon as possible. Once the release is available, all Struts2 users are strongly recommended to update their installations. In your struts.xml, replace all custom references to params-interceptor with the following code, especially regarding the class-pattern found at the beginning of the excludeParams list: <interceptor-ref name=\"params\"> <param name=\"excludeParams\"> (.*\\.|^|.*|\\[('|\") )(c|C)lass(\\.|('|\")]|\\[).*,^dojo\\..*,^struts\\..*,^session\\..*,^request\\..*,^application\\..*,^servlet(Request|Response)\\..*,^parameters\\..*,^action:.*,^method:.*</param>\n</interceptor-ref> If you are using default interceptor stacks packaged in struts-default.xml, change your parent packages to a customized secured configuration as in the following example. Given you are using defaultStack so far, change your packages from <package name=\"default\" namespace=\"/\" extends=\"struts-default\"> <default-interceptor-ref name=\"defaultStack\" /> </package> to <package name=\"default\" namespace=\"/\" extends=\"struts-default\"> <interceptors> <interceptor-stack name=\"secureDefaultStack\"> <interceptor-ref name=\"defaultStack\"> <param name=\"params.excludeParams\"> (.*\\.|^|.*|\\[('|\") )(c|C)lass(\\.|('|\")]|\\[).*,^dojo\\..*,^struts\\..*,^session\\..*,^request\\..*,^application\\..*,^servlet(Request|Response)\\..*,^parameters\\..*,^action:.*,^method:.*</param>\n            </interceptor-ref>\n        </interceptor-stack>\n    </interceptors> <default-interceptor-ref name=\"secureDefaultStack\" /> </package>"
}