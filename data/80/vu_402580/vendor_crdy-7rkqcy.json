{
  "Addendum": "There are no additional comments at this time.",
  "DateLastUpdated": "2009-05-01T15:31:00-04:00",
  "DateNotified": "",
  "DateResponded": "2009-04-28T23:57:05-04:00",
  "ID": "VU#402580",
  "Revision": 2,
  "Status": "Vulnerable",
  "Vendor": "Mort Bay",
  "VendorInformation": "http://docs.codehaus.org/display/JETTY/Jetty+Security\nhttp://jira.codehaus.org/browse/JETTY-1004",
  "VendorRecordID": "CRDY-7RKQCY",
  "VendorReferences": "",
  "VendorStatement": "A security vulnerability has been discovered in jetty that effects\nall version of Jetty up to and including jetty 6.1.16 and 7.0.0.M2\nOn a vulnerable server, a crafted URL may access files outside of\nthe web application or document tree. To be vulnerable to this issue, you must EITHER: - be using the DefaultServlet with support for aliases\n   explicitly turned on. OR - be using the ResourceHandler class to serve static content. Furthermore, on unix systems, system are only vulnerable if a directory\nwith a name ending with the character '?' to exist in the webapp or\ndocroot. On unix, this is an unlikely situation. On windows systems, this directory does not need to exist, so the\nvulnerability requires only a single change from the default\nconfiguration. A 6.1.17 release will be available shortly with this vulnerability\nclosed. Some immediate preventative actions are listed below. If you are not using the ResourceHandler, then you should\nconfirm that your jetty instance is running with\nthe Default servlet \"aliases\" initParam set to \"false\". You will find this setting in either your application's\nweb.xml or the etc/webdefault.xml. If it is not set,\nthen it takes the default, safe, value of \"false\". You should also check that the org.mortbay.util.FileResource.checkAliases\nsystem property is either not set, or set to true. If you are using the ResourceHandler, then you can secure your\nsystem against this vulnerability by compiling the source\nat the bottom of this message against the version of Jetty\nthat you are using. Use an instance of this class instead\nof the ResourceHandler package org.mortbay.jetty.cert; import java.net.MalformedURLException; import org.mortbay.jetty.handler.ResourceHandler; import org.mortbay.resource.Resource; import org.mortbay.util.StringUtil; import org.mortbay.util.URIUtil; public class TempFixResourceHandler extends ResourceHandler public Resource getResource(String path) throws MalformedURLException if (path!=null && path.indexOf('?')>=0) path=URIUtil.decodePath(URIUtil.canonicalPath(StringUtil.replace(path,\"?\",\"%3F\"))); if (path==null)\n                return null; return super.getResource(path);"
}