{
  "Author": "This document was written by Craig Schenker.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2011-0014",
  "CVSS_AccessComplexity": "--",
  "CVSS_AccessVector": "--",
  "CVSS_Authenication": "--",
  "CVSS_AvailabilityImpact": "--",
  "CVSS_BaseScore": 0,
  "CVSS_BaseVector": "AV:--/AC:--/Au:--/C:--/I:--/A:--",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "--",
  "CVSS_EnvironmentalScore": 0,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:ND/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "ND",
  "CVSS_IntegrityImpact": "--",
  "CVSS_RemediationLevel": "ND",
  "CVSS_ReportConfidence": "ND",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "ND",
  "CVSS_TemporalScore": 0,
  "CVSS_TemporalVector": "E:ND/RL:ND/RC:ND",
  "DateCreated": "2011-06-22T14:11:41-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "2014-04-24T08:39:00-04:00",
  "DatePublic": "2011-02-08T00:00:00",
  "Description": "OpenSSL Security Advisory [8 February 2011] OCSP stapling vulnerability in OpenSSL Incorrectly formatted ClientHello handshake messages could cause OpenSSL\nto parse past the end of the message. This issue applies to the following versions: 1) OpenSSL 0.9.8h through 0.9.8q\n  2) OpenSSL 1.0.0 through 1.0.0c The parsing function in question is already used on arbitary data so no\nadditional vulnerabilities are expected to be uncovered by this. However, an attacker may be able to cause a crash (denial of service) by\ntriggering invalid memory accesses. The results of the parse are only availible to the application using\nOpenSSL so do not directly cause an information leak. However, some\napplications may expose the contents of parsed OCSP extensions,\nspecifically an OCSP nonce extension. An attacker could use this to read\nthe contents of memory following the ClientHello. Users of OpenSSL should update to the OpenSSL 1.0.0d (or 0.9.8r) release,\nwhich contains a patch to correct this issue. If upgrading is not\nimmediately possible, the source code patch provided in this advisory\nshould be applied. Neel Mehta (Google) identified the vulnerability. Adam Langley and\nBodo Moeller (Google) prepared the fix. Which applications are affected Applications are only affected if they act as a server and call\nSSL_CTX_set_tlsext_status_cb on the server's SSL_CTX. This includes\nApache httpd >= 2.3.3, if configured with \"SSLUseStapling On\". Patch --- ssl/t1_lib.c\t\t 25 Nov 2010 12:28:28 -0000\t\t 1.64.2.17\n+++ ssl/t1_lib.c\t\t 8 Feb 2011 00:00:00 -0000\n@@ -917,6 +917,7 @@ n2s(data, idsize); dsize -= 2 + idsize; +\t\t \t\t \t\t \t\t \t\t size -= 2 + idsize; if (dsize < 0) *al = SSL_AD_DECODE_ERROR; @@ -955,9 +956,14 @@ /* Read in request_extensions */\n+\t\t \t\t \t\t \t\t if (size < 2) +\t\t \t\t \t\t \t\t \t\t *al = SSL_AD_DECODE_ERROR; +\t\t \t\t \t\t \t\t \t\t return 0; n2s(data,dsize); size -= 2; -\t\t \t\t \t\t \t\t if (dsize > size) \n+\t\t \t\t \t\t \t\t if (dsize != size) *al = SSL_AD_DECODE_ERROR; return 0; References This vulnerability is tracked as CVE-2011-0014. URL for this Security Advisory: http://www.openssl.org/news/secadv_20110208.txt OCSP stapling is defined in RFC 6066 (previously RFC 3546), section\n\"Certificate Status Request\".",
  "ID": "VU#976710",
  "IDNumber": "976710",
  "IPProtocol": "",
  "Impact": "The complete impact of this vulnerability is not yet known.",
  "Keywords": "Apple",
  "Overview": "",
  "References": "http://www.openssl.org/news/secadv_20110208.txt",
  "Resolution": "We are currently unaware of a practical solution to this problem.",
  "Revision": 3,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "OpenSSL OCSP stapling vulnerability",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "4",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 28,
  "Workarounds": ""
}