{
  "Author": "This document was written by Jason Rafail.",
  "CAM_AttackerAccessRequired": "10",
  "CAM_EaseOfExploitation": "14",
  "CAM_Exploitation": "1",
  "CAM_Impact": "20",
  "CAM_InternetInfrastructure": "13",
  "CAM_Population": "15",
  "CAM_ScoreCurrent": 22.8375,
  "CAM_ScoreCurrentWidelyKnown": 26.775,
  "CAM_ScoreCurrentWidelyKnownExploited": 41.7375,
  "CAM_WidelyKnown": "15",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2002-0084",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2002-05-06T09:40:38-04:00",
  "DateFirstPublished": "2002-05-09T14:08:35-04:00",
  "DateLastUpdated": "2002-05-13T16:34:00-04:00",
  "DatePublic": "2002-04-30T00:00:00",
  "Description": "",
  "ID": "VU#161931",
  "IDNumber": "161931",
  "IPProtocol": "",
  "Impact": "An attacker can execute code with the privileges of the cachefsd process, typically root.",
  "Keywords": [
    "Sun Solaris",
    "cachefsd",
    "heap overflow",
    "cfsd_calloc()",
    "long string of characters",
    "cachefsd_fs_mounted_1_svc()",
    "subr_add_mount()",
    "RPC function"
  ],
  "Overview": "Sun's NFS/RPC cachefs daemon (cachefsd) is shipped and installed by default with Sun Solaris 2.5.1, 2.6, 7, and 8 (SPARC and Intel architectures). Cachefsd caches requests for operations on remote file systems mounted via the use of NFS protocol. An exploitable stack overflow exists in cachefsd that could permit a local attacker to execute arbitrary code with the privileges of the cachefsd, typically root.",
  "References": [
    "http://www.auscert.org.au/Information/Advisories/advisory/AA-2002.01.txt",
    "http://www.eSecurityOnline.com/advisories/eSO4198.asp",
    "http://www.securityfocus.com/bid/4631",
    "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2002-0084"
  ],
  "Resolution": "The CERT/CC is currently unaware of patches for this problem.",
  "Revision": 12,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Our thanks to AusCERT, eSecurityOnline, and the Sun Security Coordination Team, as well as Mark Dowd and Stephen James of IT Audit & Consulting for their analysis and reports about this vulnerability.",
  "Title": "Sun Solaris cachefsd vulnerable to stack overflow in fscache_setup() function",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "According to the Sun Alert Notification a workaround is as follows: Comment out cachefsd in /etc/inetd.conf as shown below: #100235/1 tli rpc/tcp wait root /usr/lib/fs/cachefs/cachefsd  cachefsd Once the line is commented out either: - reboot, or\n                                   - send a HUP signal to inetd(1M) and kill existing cachefsd processes, for example,\n                                     on Solaris 2.5.1 and 2.6 do the following: $ kill -HUP <PID of inetd>\n                                           $ kill <PIDs of any cachefsd processes> Solaris 7 and 8 do the following: $ pkill -HUP inetd\n                                           $ pkill cachefsd The possible side effects of the workaround are: - for systems not using cachefs: There is no impact. - for systems using cachefs: Only a \"disconnected\" operation is known to be affected by \n                                           disabling cachefsd. This feature is rarely used outside of AutoClient. Mounts and unmounts should still succeed though an error message \n                                           may be seen, \"mount -F cachefs: cachefsd is not running\". There is no performance impact. - for systems using AutoClient: The impact is unknown. Again, only \"disconnected\" mode is likely \n                                           to be affected."
}