{
  "Author": "This document was written by Shawn V Hernan.",
  "CAM_AttackerAccessRequired": "10",
  "CAM_EaseOfExploitation": "10",
  "CAM_Exploitation": "10",
  "CAM_Impact": "15",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "15",
  "CAM_ScoreCurrent": 6.328125,
  "CAM_ScoreCurrentWidelyKnown": 12.65625,
  "CAM_ScoreCurrentWidelyKnownExploited": 16.875,
  "CAM_WidelyKnown": "5",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1998-05-21T11:54:26-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1999-02-15T09:34:44-05:00",
  "DatePublic": "",
  "Description": "These words are from the reporter, Olaf Kirch:\n\nI've just come across a problem with wu-ftpd beta15... The PORT\ncommand fails to check the client-specified port number\ncorrectly. If you login from localhost, it will reject\n127,0,0,1,2,1 (port 513 being off limits), but will gladly accept\n127,0,0,1,2,1025 as a legal port but map it to 513 nevertheless.  A\npatch is included.\n\nThe problem is that the port check itself is flawed ($9 and $11 are\nthe first and second octect of the port number):\n\np = (char *)&data_dest.sin_port;\np[0] = 0; p[1] = 0;\ncliport = ($9 << 8) + $11;\nif (cliport > 1023) {\np[0] = $9; p[1] = $11;\n}\n\nThis lets you specify the port number 513 as 2,1025 which will set\ncliport to 512 + 1025 == 1537 which is legal from wu-ftpd's point\nof view, but will set data_dest.sin_port to 513. There you go...\n\nThere is a second problem I discovered just today by which you can\ntrick wu-ftpd into connecting to any service on the server host,\nwhich may be even more interesting. Assume you specify an address\nin the PORT command that is not yours. Wu-ftpd will complain and\nreply with '500 Illegal PORT command', but the data_dest address\nwill still contain the port number you requested _and_ the address\n0.0.0.0.\n\nThe client is free to ignore the command and send the RETR command\nanyway.  The server will _not_ check the data_dest address in\nretrieve and happily try to connect to 0.0.0.0:port. At least Linux\n2.0.x interprets 0.0.0.0 as meaning the loopback device. I'm not\nsure if others do that, too, but IIRC this is a BSDism that should\naffect others as well.\n\n> Just one more thought on this.  Our understanding in writing the\n> advisory was that the current available version of wu-ftpd\n> addresses the FTP Bounce problem by ensuring that the PORT\n> command can only be used to connect back to the client machine.\n> Even with the bug that you have pointed out, is this assertion\n> still correct?\n\nMostly. Wu-ftpd will accept PORT commands that either connect back\nto the client host, or to a service on the host wu-ftpd runs on\n(this is the second problem I described).\n\nThe first problem alone (being able to connect back to a reserved\nport on the client machine) can be a security problem on local OSs\nthat install wu-ftpd by default (many Linux distributions come with\nwu-ftpd as the default FTP daemon). If user X has host Y (which\nruns wu-ftpd) in her .rhosts file, all that's needed is to ask\nwu-ftpd to send a carefully prepared file to port 513 or 514. I'm\nincluding a sample exploit in an attachment (it doesn't work with\nrlogind's that reject connections from port < 512, though).\n\nThe combination of the two attacks is what makes the holes\ndangerous.  Assume you send PORT 9,9,9,9,0,1135 and then RETR a\nfile, wu-ftpd will connect to the portmapper on localhost and\ntransmit the contents of that file. Other interesting applications\ninclude rlogind, rshd, nfsd, X11, etc.  You can also mount a DoS\nattack by directing wu-ftpd to connect back to itself (if you put\nthe following in /incoming/hack):\n\nuser ftp\npass me@localhost\nport 9,9,9,9,0,1045\nretr /incoming/hack\n\n(9,9,9,9,0,1045 becomes 0.0.0.0, port 21).",
  "ID": "VU#5466",
  "IDNumber": "5466",
  "IPProtocol": "",
  "Impact": "Under the correct conditions, an attacker can leverage this to\nlogin to accounts on a local machine that [s]he would not normally\nbe able to login into.",
  "Keywords": [
    "ftp",
    "PORT"
  ],
  "Overview": "",
  "References": "",
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "wu-ftpd_PORT",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}