{
  "Author": "This document was written by Garret Wassermann.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2016-6559",
  "CVSS_AccessComplexity": "M",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "C",
  "CVSS_BaseScore": 9.3,
  "CVSS_BaseVector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 1.72528520976,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:L/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "U",
  "CVSS_IntegrityImpact": "C",
  "CVSS_RemediationLevel": "OF",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "L",
  "CVSS_TemporalScore": 6.9,
  "CVSS_TemporalVector": "E:U/RL:OF/RC:C",
  "DateCreated": "2016-10-10T02:54:02-04:00",
  "DateFirstPublished": "2016-12-06T11:37:26-05:00",
  "DateLastUpdated": "2016-12-08T17:59:00-05:00",
  "DatePublic": "2016-12-06T00:00:00",
  "Description": "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') - CVE-2016-6559 Improper bounds checking of the obuf variable in the link_ntoa() function in linkaddr.c may allow an attacker to read or write from memory. The full impact and severity depends on the method of exploit and how the library is used by applications. According to analysis by FreeBSD developers, it is very unlikely that applications exist that utilize link_ntoa() in an exploitable manner, and the CERT/CC is not aware of any proof of concept. A blog post describes the functionality of link_ntoa() and points out that none of the base utilities use this function in an exploitable manner. For more information, please see FreeBSD Security Advisory SA-16:37. The CVSS score below reflects a worst-case scenario in which an attacker may execute arbitrary code with root permissions. It is unclear if any program exists that would allow exploit in any manner.",
  "ID": "VU#548487",
  "IDNumber": "548487",
  "IPProtocol": "",
  "Impact": "The full impact and severity depends on the method of exploit and how the library is used by applications. An attacker may be able to execute arbitrary code, but CERT/CC is currently unaware of a proof of concept.",
  "Keywords": [
    "buffer overflow",
    "CWE-120"
  ],
  "Overview": "The BSD libc library's link_ntoa() function may be vulnerable to a classic buffer overflow. It is currently unclear if this issue is exploitable.",
  "References": [
    "https://www.freebsd.org/security/advisories/FreeBSD-SA-16:37.libc.asc",
    "https://github.com/freebsd/freebsd/blob/386ddae58459341ec567604707805814a2128a57/lib/libc/net/linkaddr.c#L132",
    "http://www.tedunangst.com/flak/post/who-even-calls-link-ntoa",
    "http://cwe.mitre.org/data/definitions/120.html"
  ],
  "Resolution": "Apply an update FreeBSD libc was updated to address this vulnerability. Affected users are encouraged to upgrade to the latest version of libc and/or the latest release of your operating system. In FreeBSD, the following patch levels (or later) contain a fix: 9.3-RELEASE-p51\n10.1-RELEASE-p43\n10.2-RELEASE-p26\n10.3-RELEASE-p13\n11.0-RELEASE-p4",
  "Revision": 54,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to the reporter who wishes to remain anonymous.",
  "Title": "BSD libc contains a buffer overflow vulnerability in link_ntoa()",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}