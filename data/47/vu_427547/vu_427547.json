{
  "Author": "This document was written by Michael Orlando.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": [
    "CVE-2012-4941",
    "CVE-2012-4942",
    "CVE-2012-4943",
    "CVE-2012-4944",
    "CVE-2012-4945",
    "CVE-2012-4946",
    "CVE-2012-4947"
  ],
  "CVSS_AccessComplexity": "L",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "C",
  "CVSS_BaseScore": 10,
  "CVSS_BaseVector": "AV:N/AC:L/Au:N/C:C/I:C/A:C",
  "CVSS_CollateralDamagePotential": "L",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 1.8,
  "CVSS_EnvironmentalVector": "CDP:L/TD:L/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "POC",
  "CVSS_IntegrityImpact": "C",
  "CVSS_RemediationLevel": "OF",
  "CVSS_ReportConfidence": "UC",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "L",
  "CVSS_TemporalScore": 7,
  "CVSS_TemporalVector": "E:POC/RL:OF/RC:UC",
  "DateCreated": "2012-02-15T10:11:10-05:00",
  "DateFirstPublished": "2012-11-07T07:34:06-05:00",
  "DateLastUpdated": "2012-11-07T08:47:00-05:00",
  "DatePublic": "2012-11-07T00:00:00",
  "Description": "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - CVE-2012-4941\nSQL Injection Vulnerabilities: Multiple query string parameters for both authenticated and unauthenticated users are not properly sanitized before being used in a SQL query. This can be exploited to manipulate SQL queries by injecting arbitrary SQL code. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - CVE-2012-4942\nPersistent XSS Vulnerabilities: The application\u2019s web interface allows users to provide text input into many fields which are stored in a database and displayed back to the user in various places. Input passed to all text fields in the application is not properly sanitized before being displayed to users. This can be exploited to execute arbitrary HTML and script code in a user's browser session. CWE-352: Cross-Site Request Forgery (CSRF) - CVE-2012-4943\nCSRF Vulnerabilities: The application's web interface allows users to perform many actions via HTTP POST requests without performing any validity checks to verify the requests. This can be exploited to change the administrator's/user\u2019s passwords, creating new user accounts, deleting user accounts, granting additional site permissions, and more by tricking a logged in administrator or other user into visiting a malicious web site. CWE-280: Improper Handling of Insufficient Permissions or Privileges - CVE-2012-4944\nUnrestricted File Upload Vulnerabilities: The application has several pages that are available to unauthenticated users where arbitrary files are able to be uploaded onto the system. This can be exploited to upload arbitrary files to the system and could be used to compromise the system. CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') - CVE-2012-4945\nUnauthenticated Site Actions: The application has several pages that could be exploited to allow an unauthenticated user to perform actions in the application that only an authenticated user should be able to perform. CWE-326: Inadequate Encryption Strength - CVE-2012-4946\nReversible Encrypted Password Vulnerability: The user passwords for the application are stored in a reversible XOR encrypted format. If a malicious user is able to obtain the encrypted passwords, they would be able to be decrypted. A password key and the encryption/decryption function is located in afile. CWE-312: Cleartext Storage of Sensitive Information - CVE-2012-4947\nInformation Disclosure Vulnerabilities: The application has several pages that can be exploited by malicious users to disclose potentially sensitive information. Database connection information including clear text credentials are stored in a file.",
  "ID": "VU#427547",
  "IDNumber": "427547",
  "IPProtocol": "",
  "Impact": "A remote unauthenticated attacker may obtain sensitive information, cause a denial of service condition or execute arbitrary code with the privileges of the application.",
  "Keywords": [
    "agile",
    "fleetCommander",
    "xss",
    "csrf",
    "sqli",
    "cwe-89",
    "cwe-79",
    "cwe-v352",
    "cwe-280",
    "cwe-77",
    "cwe-326",
    "cwe-312"
  ],
  "Overview": "Agile FleetCommander and FleetCommander Kiosk were found to have multiple XSS, CSRF, information disclosure and SQLi vulnerabilities.",
  "References": [
    "http://cwe.mitre.org/data/definitions/89.html",
    "http://cwe.mitre.org/data/definitions/79.html",
    "http://cwe.mitre.org/data/definitions/352.html",
    "http://cwe.mitre.org/data/definitions/280.html",
    "http://cwe.mitre.org/data/definitions/77.html",
    "http://cwe.mitre.org/data/definitions/326.html",
    "http://cwe.mitre.org/data/definitions/312.html",
    "http://www.agilefleet.com/"
  ],
  "Resolution": "Update The vendor has stated that these vulnerabilities have been addressed in version 4.08, version 4.08.01 and version 4.09.00. The vendor recommends that users update to version 4.09.00 or higher.",
  "Revision": 26,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to Travis Lee for reporting this vulnerability.",
  "Title": "Agile FleetCommander and FleetCommander Kiosk versions prior to 4.08 contain multiple vulnerabilities",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 7,
  "Workarounds": "Restrict access As a general good security practice, only allow connections from trusted hosts and networks. Note that restricting access does not prevent XSS or CSRF attacks since the attack comes as an HTTP request from a legitimate user's host. Restricting access would prevent an attacker from accessing a web interface using stolen credentials from a blocked network location."
}