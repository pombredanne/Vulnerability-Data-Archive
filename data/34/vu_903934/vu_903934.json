{
  "Author": "This document was written by Jared Allar and David Warren.",
  "CAM_AttackerAccessRequired": "20",
  "CAM_EaseOfExploitation": "16",
  "CAM_Exploitation": "0",
  "CAM_Impact": "6",
  "CAM_InternetInfrastructure": "10",
  "CAM_Population": "15",
  "CAM_ScoreCurrent": 10.8,
  "CAM_ScoreCurrentWidelyKnown": 16.2,
  "CAM_ScoreCurrentWidelyKnownExploited": 27,
  "CAM_WidelyKnown": "10",
  "CERTAdvisory": "",
  "CVEIDs": [
    "CVE-2011-4815",
    "CVE-2011-3414",
    "CVE-2011-4838",
    "CVE-2011-4885"
  ],
  "CVSS_AccessComplexity": "--",
  "CVSS_AccessVector": "--",
  "CVSS_Authenication": "--",
  "CVSS_AvailabilityImpact": "--",
  "CVSS_BaseScore": 0,
  "CVSS_BaseVector": "AV:--/AC:--/Au:--/C:--/I:--/A:--",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "--",
  "CVSS_EnvironmentalScore": 0,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:ND/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "ND",
  "CVSS_IntegrityImpact": "--",
  "CVSS_RemediationLevel": "ND",
  "CVSS_ReportConfidence": "ND",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "ND",
  "CVSS_TemporalScore": 0,
  "CVSS_TemporalVector": "E:ND/RL:ND/RC:ND",
  "DateCreated": "2011-10-31T08:37:58-04:00",
  "DateFirstPublished": "2011-12-28T12:23:48-05:00",
  "DateLastUpdated": "2016-02-15T15:05:00-05:00",
  "DatePublic": "2011-12-28T00:00:00",
  "Description": "Many applications, including common web framework implementations, use hash tables to map key values to associated entries. If the hash table contains entries for different keys that map to the same hash value, a hash collision occurs and additional processing is required to determine which entry is appropriate for the key. If an attacker can generate many requests containing colliding key values, an application performing the hash table lookup may enter a denial of service condition. Hash collision denial-of-service attacks were first detailed in 2003, but recent research details how these attacks apply to modern language hash table implementations.",
  "ID": "VU#903934",
  "IDNumber": "903934",
  "IPProtocol": "",
  "Impact": "An application can be forced into a denial-of-service condition. In the case of some web application servers, specially-crafted POST form data may result in a denial-of-service.",
  "Keywords": [
    "Hash Table",
    "Multiple Languages",
    "Algorithmic Complexity",
    "denial of service",
    "PHP",
    "ruby",
    "web"
  ],
  "Overview": "Some programming language implementations do not sufficiently randomize their hash functions or provide means to limit key collision attacks, which can be leveraged by an unauthenticated attacker to cause a denial-of-service (DoS) condition.",
  "References": [
    "http://www.ocert.org/advisories/ocert-2011-003.html",
    "http://www.nruns.com/_downloads/advisory28122011.pdf",
    "http://www.cs.rice.edu/~scrosby/hash/CrosbyWallach_UsenixSec2003.pdf",
    "http://technet.microsoft.com/en-us/security/bulletin/ms11-100.mspx"
  ],
  "Resolution": "Apply an update\nPlease review the Vendor Information section of this document for vendor-specific patch and workaround details.",
  "Revision": 41,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to Alexander Klink and Julian W\u00e4lde for reporting these vulnerabilities.",
  "Title": "Hash table implementations vulnerable to algorithmic complexity attacks",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "4",
  "VulnerabilityCount": 1,
  "Workarounds": "Limit CPU time Limiting the processing time for a single request can help minimize the impact of malicious requests. Limit maximum POST size Limiting the maximum POST request size can reduce the number of possible predictable collisions, thus reducing the impact of an attack. Limit maximum request parameters Some servers offer the option to limit the number of parameters per request, which can also minimize impact."
}