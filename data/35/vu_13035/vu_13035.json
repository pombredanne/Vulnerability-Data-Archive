{
  "Author": "This document was written by CN=James T Ellis/O=CERT.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1999-01-05T17:22:30-05:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1999-02-14T13:51:26-05:00",
  "DatePublic": "",
  "Description": "Anyone who can create a cgi script on a system running the Netscape Commerce\nServer (v1.1 for Solaris 2.4) can become root on that system, assuming that\nthe server is started as root (i.e. if the server is started automatically\nat boot time), even if the server is configured to run as an unprivileged\nuser such as \"nobody\".",
  "ID": "VU#13035",
  "IDNumber": "13035",
  "IPProtocol": "",
  "Impact": "",
  "Keywords": "",
  "Overview": "",
  "References": "",
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "config",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "> One quick workaround for this is to change the \"start\" script used to\n> start up the servers to check for symlinks in the logs directory; > I've enclosed a sample modified \"start\" script and a simple program\n> used by that script to check the modes of the log files. This is\n> probably good enough for the case where ns-httpd is started\n> automatically, but A better solution (that would prevent a race\n> condition from happening when someone restarts ns-httpd on a running\n> system) would be for the server itself to do an lstat of each log file\n> to make sure it's not a symlink or hard link before chowning it. > (Even better would be to do an open, then an lstat of the pathname of\n> the file just opened, then an fstat of the file descriptor just\n> opened, and compare the dev and inode of the fstat and lstat results\n> as well as checking the link count before chowning file). > Another easy workaround might be to configure the server to use syslog\n> rather than writing to its own log files."
}