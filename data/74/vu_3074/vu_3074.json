{
  "Author": "This document was written by Shawn V Hernan.",
  "CAM_AttackerAccessRequired": "10",
  "CAM_EaseOfExploitation": "20",
  "CAM_Exploitation": "0",
  "CAM_Impact": "20",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "1",
  "CAM_ScoreCurrent": 1.125,
  "CAM_ScoreCurrentWidelyKnown": 1.5,
  "CAM_ScoreCurrentWidelyKnownExploited": 3,
  "CAM_WidelyKnown": "15",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1999-01-05T17:40:07-05:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "2002-08-16T17:07:00-04:00",
  "DatePublic": "1998-11-30T00:00:00",
  "Description": "Background: Digital Unix Enhanced Security has the concept of a \"Login UID\",\nalso called the \"Audit ID\".  The idea is that when you are authenticated\nto a Digital Unix system using enhanced security, your login UID is set to\nbe whatever your real UID is, and even if your UID or EUID changes, the\nlogin UID stays the same.  According to the documentation, once the Login\nID is set it cannot be changed.\n\nAny program that authenticates a user and changes UID to that user *must*\nalso set the login UID before invoking a shell or command on behalf of the\nthe user.  If this is not done the Login UID remains unset, which Enhanced\nSecurity treats as UID 0, or root.\n\nMany Enhanced Security tools check *and honor* the Login UID.  Programs such\nas /usr/tcb/bin/edauth will treat you as root when your Login UID is unset,\nso it's possible to use `edauth' and other tools to see all the encrypted\npasswds for all users, delete the enhanced security entry for a user, make\nchanges to the enhanced security profiles for a user (even root), and possibly\neven create new accounts on a machine.\n\nAs far as I can tell, `login.krb5' from the Kerberos V 1.0.5 distribution is\nthe only component of Kerberos V that is aware of the Login UID.  There are\nmany other daemons (telnetd, kshd, klogind, possibly others) that do *not*\nset the Login UID before calling `setuid()' and exec'ing a command or shell\nfor a user.  This means that anyone that successfully authenticates via\nKerberos V to a Digital Unix machine running Enhanced Security gets a shell\nthat has no Login UID, so all Enhanced Security-aware commands run from that\nshell run with a Login UID of 0.\n\nThe fix is to find all places in the Kerberos V source code where a daemon\nauthenticates a user and then change uid to that user before running a\ncommand (or doing something as that user).  Once those places have been\nidentified, a call to `setluid' needs to be added before any call to\n`setuid()'.\n",
  "ID": "VU#3074",
  "IDNumber": "3074",
  "IPProtocol": "",
  "Impact": "An attacker who can authenticate through certain Kerberos utilities can trivially gain root access.",
  "Keywords": [
    "kerberos",
    "Digital unix"
  ],
  "Overview": "Older versions of Kerberos V, circa 1998, fail to set the login ID when running on Digital Unix Enhanced Security, thereby allowing trivial root compromise on those systems.",
  "References": "",
  "Resolution": "Update to the latest version of Kerberos.",
  "Revision": 8,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "Kerberos V fails to set Login ID on Digital Unix Enhanced Security",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}