{
  "Author": "This document was written by Chad R Dougherty and Robert C Seacord.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2008-03-06T08:59:00-05:00",
  "DateFirstPublished": "2008-04-04T10:07:12-04:00",
  "DateLastUpdated": "2008-12-10T15:59:00-05:00",
  "DatePublic": "2006-04-17T00:00:00",
  "Description": "",
  "ID": "VU#162289",
  "IDNumber": "162289",
  "IPProtocol": "",
  "Impact": "An application that performs wrapping checks based on an expression such as the one described above may be vulnerable to buffer overflow if compiled with affected compiler implementations. The nature of the resulting vulnerability would be specific to the application and depends on how the affected code is used.",
  "Keywords": [
    "integer overflow",
    "buffer overflow",
    "existing code",
    "INT32-C",
    "INT08-C",
    "ARR38-C",
    "MSC15-C"
  ],
  "Overview": "Some C compilers optimize away pointer arithmetic overflow tests that depend on undefined behavior without providing a diagnostic (a warning). Applications containing these tests may be vulnerable to buffer overflows if compiled with these compilers.",
  "References": [
    "http://archive.cert.uni-stuttgart.de/bugtraq/2006/04/msg00347.html",
    "http://gcc.gnu.org/ml/gcc-bugs/2006-04/msg01297.html"
  ],
  "Resolution": "Use casts\nCast objects of type char* to uintptr_t before comparison. The faulty wrapping check listed above would be written #include <stdint.h> if((uintptr_t)buf+len < (uintptr_t)buf) Alternatively, developers can use size_t on platforms that do not provide the uintptr_t type. Developers should also follow the recommendations described in CERT C Secure Coding rule ARR38-C. Avoid affected compiler implementations\nApplication developers and vendors of large codebases that cannot be audited for use of the defective wrapping checks are urged to avoid using compiler implementations that perform the offending optimization. Vendors and developers should carefully evaluate the conditions under which their compiler may perform the offending optimization. In some cases, downgrading the version of the compiler in use or sticking with versions of the compiler that do not perform the offending optimization may mitigate resulting vulnerabilities in applications.",
  "Revision": 68,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Felix von Leitner originally published information about this behavior in the gcc compiler. Russ Cox later noticed this behavior as well and provided additional information and assistance.",
  "Title": "C compilers may silently discard some wraparound checks",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "0",
  "VRDA_D1_Impact": "1",
  "VRDA_D1_Population": "1",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}