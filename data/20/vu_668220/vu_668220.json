{
  "Author": "This document was written by Michael Orlando.",
  "CAM_AttackerAccessRequired": "17",
  "CAM_EaseOfExploitation": "14",
  "CAM_Exploitation": "0",
  "CAM_Impact": "19",
  "CAM_InternetInfrastructure": "19",
  "CAM_Population": "19",
  "CAM_ScoreCurrent": 54.772725,
  "CAM_ScoreCurrentWidelyKnown": 62.8275375,
  "CAM_ScoreCurrentWidelyKnownExploited": 95.0467875,
  "CAM_WidelyKnown": "15",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2011-1547",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2011-03-28T14:20:44-04:00",
  "DateFirstPublished": "2011-04-01T10:25:42-04:00",
  "DateLastUpdated": "2011-08-16T11:08:00-04:00",
  "DatePublic": "2011-04-01T00:00:00",
  "Description": "RFC 3173 defines the IP Payload Compression Protocol (IPComp) as: IP payload compression is a protocol to reduce the size of IP datagrams. This protocol will increase the overall communication performance between a pair of communicating hosts/gateways (\"nodes\") by compressing the datagrams, provided the nodes have sufficient computation power, through either CPU capacity or a compression coprocessor, and the communication is over slow or congested links. IPComp is commonly used in conjunction with IPsec implementations. Some network stack implementations, particularly those incorporating the KAME project or NetBSD project IPComp and IPsec implementations, may fail to check for stack overflow in their recursive handling of nested IPComp-encapsulated payloads. Exploitation of this vulnerability could allow a remote attacker to cause kernel memory corruption.",
  "ID": "VU#668220",
  "IDNumber": "668220",
  "IPProtocol": "",
  "Impact": "A remote attacker can cause a kernel stack overflow leading to a denial of service or possibly execute arbitrary code.",
  "Keywords": [
    "NetBSD",
    "kernel",
    "network",
    "xnu",
    "ipcomp",
    "ipsec",
    "encapsulation"
  ],
  "Overview": "Some IPComp implementations may contain a kernel memory corruption vulnerability in their handling of nested encapsulation of IPComp payloads.",
  "References": [
    "http://tools.ietf.org/html/rfc3173",
    "http://lists.grok.org.uk/pipermail/full-disclosure/2011-April/080031.html"
  ],
  "Resolution": "Apply a Patch from Your Vendor\nPlease see the Vendor Information below for specific vendor information and patches.",
  "Revision": 38,
  "SystemsAffectedPreamble": "Note that any systems derived from the KAME or NetBSD IPComp implementations may be vulnerable.",
  "ThanksAndCredit": "Thanks to Tavis Ormandy of Google for reporting this vulnerability.",
  "Title": "IPComp encapsulation nested payload vulnerability",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 1,
  "Workarounds": "Workarounds Filter IPComp (protocol number 108) at network borders if it is not required\nUtilize packet filtering on workstations or servers to prevent the vulnerable code from being executed\nRecompile affected software to disallow nested encapulation of IPComp payloads if possible"
}