{
  "Author": "This document was written by Michael Orlando.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2013-1571",
  "CVSS_AccessComplexity": "L",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "N",
  "CVSS_BaseScore": 5,
  "CVSS_BaseVector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
  "CVSS_CollateralDamagePotential": "LM",
  "CVSS_ConfidentialityImpact": "N",
  "CVSS_EnvironmentalScore": 4.4,
  "CVSS_EnvironmentalVector": "CDP:LM/TD:M/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "F",
  "CVSS_IntegrityImpact": "P",
  "CVSS_RemediationLevel": "OF",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "M",
  "CVSS_TemporalScore": 4.1,
  "CVSS_TemporalVector": "E:F/RL:OF/RC:C",
  "DateCreated": "2013-05-22T11:09:05-04:00",
  "DateFirstPublished": "2013-06-18T15:48:54-04:00",
  "DateLastUpdated": "2013-06-25T08:28:00-04:00",
  "DatePublic": "2013-06-18T00:00:00",
  "Description": "Oracle Java Development Toolkit (JDK) contains a Javadoc toolkit that allows a developer to generate API documentation in HTML format from doc comments in source code. Javadoc HTML pages that were created by Javadoc 7 Update 21 and before, 6 Update 45 and before, 5.0 Update 45 and before, JavaFX 2.2.21 and before contain JavaScript code that fails to parse scheme relative URIs parameters correctly. An attacker can construct a URI that passes malicious parameters to the affected HTML page that causes one of the frames within the Javadoc-generated web page to be replaced with a malicious page. For additional information please see Oracle Security Advisory.",
  "ID": "VU#225657",
  "IDNumber": "225657",
  "IPProtocol": "",
  "Impact": "An attacker can cause one of the frames within a Javadoc-generated web page to be replaced with a malicious page. This vulnerability could be used for phishing or social engineering, or it could be used for browser exploitation if combined with another browser-related vulnerability.",
  "Keywords": [
    "javadoc",
    "scheme-relative URI",
    "network-path reference URI",
    "html",
    "javascript"
  ],
  "Overview": "Javadoc HTML pages that were created by Javadoc 7 Update 21 and before, 6 Update 45 and before, 5.0 Update 45 and before, JavaFX 2.2.21 and before contain a frame injection vulnerability that could allow an attacker to replace a Javadoc web page frame with a malicious page.",
  "References": [
    "http://tools.ietf.org/html/rfc3986#section-4.2",
    "http://www.oracle.com/technetwork/java/javase/jdk-7-readme-429198.html",
    "http://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html",
    "http://www.oracle.com/technetwork/topics/security/javacpujun2013-1899847.html",
    "http://www.oracle.com/technetwork/java/javase/downloads/java-doc-updater-tool-1955731.html"
  ],
  "Resolution": "Apply Update Oracle has released June 2013 Java Critical Patch Update to address this vulnerability. Oracle Java Development Toolkit (JDK) and Javadoc users are advised to apply June 2013 Java Critical Patch Update and regenerate and republish affected Javadoc HTML pages. Fix-in-Place Tool Oracle has released a fix-in-place tool named Java API Documentation Updater Tool. This fix-in-place tool can process directories or folders to search for HTML files to be remediated without having to regenerate existing Javadocs. When presented directories/folders and their sub-directories or sub-folders the Java API Documentation Updater Tool will search for files with the following names: index.htm\nindex.html\ntoc.htm\ntoc.html For each file that matches the names noted above the Java API Documentation Updater Tool will search the file for the affected JavaScript text and replace it with the remediated version. Note that this tool will not detect Javadoc pages that have been renamed to something other than one of the above page names.",
  "Revision": 36,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to Oracle for reporting this vulnerability.",
  "Title": "Oracle Javadoc HTML frame injection vulnerability",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "4",
  "VRDA_D1_Population": "4",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}