{
  "Author": "This document was written by Georgia T Killcrece.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1999-01-05T17:34:45-05:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "2004-06-18T15:47:00-04:00",
  "DatePublic": "",
  "Description": "/sbin/suid_exec is owned by root and suid.  I don't know what it's supposed\nto do, but it can be easily exploited by any local user to get root\npriorities.  Exploit works on both 5.3 and 6.2 machines, it's part of\neoe.sw.unix and thus is installed on each and every machine.\n\n\n/sbin/suid_exec (/etc/suid_exec is a link to it) is a misterious program.\nIt's not known to me what it's supposed to do.  Man page is not there, and I\nhad no clue about what it actually does.  Trying to run it will not give one\nanything, except errors.  So I got curious.  After some playing with system\ncall tracing and strings, I think I found what it does.  It checks argv[0]\n(why?, for ownership and permissions, and if it's executable, it invokes\nyour default shell to parse that file.  If it's root-owned suid program,\nsuid_exec will not give up root priorities prior to execve.  So it can serve\nas an interpreter for suid shell scripts.  Of course, by default all suid\nexecutable files on Irix are ELF binaries, and when shell tries to parse\nsuch a file all you get is errors, but...  Interesting point: it gets shell\nname from SHELL environment variable.  Besides, it doesn't care what this\nshell may do, and it may do a lot of interesting things, like executing dot\nfiles.",
  "ID": "VU#3609",
  "IDNumber": "3609",
  "IPProtocol": "",
  "Impact": "root access",
  "Keywords": [
    "SGI",
    "IRIX",
    "suid_exec",
    "root access",
    "local user"
  ],
  "Overview": "",
  "References": [
    "posted to Bugtraq",
    "e.org/cgi-bin/wa?A2=ind9612a&L=bugtraq&F=&S=&P=3590",
    "\u00a0\u00bb.&#9632;",
    "http://www.netspace.org/cgi-bin/wa?A2=ind9612a&L=bugtraq&F=&S=&P=996",
    "http://www.netspace.org/cgi-bin/wa?A2=ind9612a&L=bugtraq&F=&S=&P=3486",
    "http://www.netspace.org/cgi-bin/wa?A2=ind9612a&L=bugtraq&F=&S=&P=3590"
  ],
  "Resolution": "",
  "Revision": 2,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "sgi/suid_exec",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "chmod -s /sbin/suid_exec"
}