{
  "Author": "This document was written by Jason Rafail.",
  "CAM_AttackerAccessRequired": "20",
  "CAM_EaseOfExploitation": "20",
  "CAM_Exploitation": "11",
  "CAM_Impact": "19",
  "CAM_InternetInfrastructure": "10",
  "CAM_Population": "3",
  "CAM_ScoreCurrent": 17.5275,
  "CAM_ScoreCurrentWidelyKnown": 17.5275,
  "CAM_ScoreCurrentWidelyKnownExploited": 21.375,
  "CAM_WidelyKnown": "20",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2001-10-04T12:43:07-04:00",
  "DateFirstPublished": "2001-10-18T11:00:04-04:00",
  "DateLastUpdated": "2001-10-22T10:22:00-04:00",
  "DatePublic": "2001-07-25T00:00:00",
  "Description": "",
  "ID": "VU#847803",
  "IDNumber": "847803",
  "IPProtocol": "",
  "Impact": "Intruders can exploit these vulnerabilities to gain administrative rights to the application or server, manipulate data, and execute arbitrary php code.",
  "Keywords": [
    "php",
    "variables",
    "global context",
    "cross-site scripting",
    "css",
    "arbitrary commands",
    "crafted URL"
  ],
  "Overview": "Php is a dynamic scripting language used by programmers to develop webservers, message boards, chat applications and a variety of programs. By default php stores variables passed from the URL in a global context. Programmers often fail to change this setting which can allow serious vulnerabilities to surface. Often intruders can exploit the vulnerabilities created by this failure to gain administrative rights to the application or server, manipulate data, and execute arbitrary php code.",
  "References": [
    "http://www.securityfocus.com/bid/3383",
    "http://www.securityfocus.com/bid/3384",
    "http://www.securityfocus.com/bid/3385",
    "http://www.securityfocus.com/bid/3386",
    "http://www.securityfocus.com/bid/3387",
    "http://www.securityfocus.com/bid/3388",
    "http://www.securityfocus.com/bid/3389",
    "http://www.securityfocus.com/bid/3390",
    "http://www.securityfocus.com/bid/3391",
    "http://www.securityfocus.com/bid/3392",
    "http://www.securityfocus.com/bid/3393",
    "http://www.securityfocus.com/bid/3394",
    "http://www.securityfocus.com/bid/3395",
    "http://www.securityfocus.com/bid/3396",
    "http://www.securityfocus.com/bid/3397",
    "http://www.securityfocus.com/bid/3093"
  ],
  "Resolution": "Disable global variables from the URL/client. Best programming practices are to not use global variables if at all possible. Do not permit the execution of code that does not originate from the webserver. If you need to use global variables, set variables_order = \"egcps\" in php.ini and set the value of every global variable in every file that the global variable is used.",
  "Revision": 32,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Our thanks to atil <bugtraq@jakob.weite-welt.com> and genetics <veenstra@chello.nl> for the information contained in their posting to BugTraq.",
  "Title": "Php variables passed from the browser are stored in global context",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}