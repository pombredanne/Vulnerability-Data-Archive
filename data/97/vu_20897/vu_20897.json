{
  "Author": "This document was written by CN=Rob D McMillan/O=CERT.",
  "CAM_AttackerAccessRequired": "20",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "5",
  "CAM_Impact": "20",
  "CAM_InternetInfrastructure": "8",
  "CAM_Population": "8",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "16",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "1998-05-21T11:45:04-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "1999-02-14T17:26:43-05:00",
  "DatePublic": "",
  "Description": "The world of Unix vulnerabilities is big, and suid programs present\na good part of it.  Irix is no exception.  How can this be\nexploited?\n\nLet's review the situation on example.  Look in /usr/bin/X11.\nThere are several suid programs, but most of them are standard to\nall Unices, so their holes are well known and thus are not\ninteresting for research purposes.  One binary caught our eye --\ncdplayer.  It's Irix special, must be interesting.  Close look\nreveals that indeed it is.\n\nSuid program that does file I/O always has something to offer.\nFirst step, reading man page, shows that it stores CD catalogs and\nprograms in ~/.cddb directory.  Well, let's see it working.  Put\naudio CD in the drive, run cdplayer.  Looks nice.  Let's make a\nshort CD description and look at what we have on the disk.  Indeed,\n~/.cddb is there, but it's empty.  Hm. ls -ld ~/.cddb.  Owned by\nroot?  Interesting.  But harmless.  What is the use of root-owned\n~/.cddb?  But what did that man page say about CDDB_WRITE_PATH?\nYep, RTFMing always helps, now we have .cddb in /etc.  Let's see if\ncatalog files themselves are root-owned. Nope. And it refuses to\noverwrite anything.  Too bad, it's suid-aware and gives up root\npriorities.  So it's still useless.  But it begins to look\npromising so we take standard step #2,\n\nstrings /usr/bin/X11/cdplayer\n\nAs usually, out friend strings tells us many interesting facts.\nFor example, there are few strings that look like command line\noptions, particularly -dbcdir.  Yep, these are valid options,\nthough not documented in man page.  What -dbcdir does?  Suddenly,\nour abilities increase from creating .cddb anywhere to creating a\nroot-owned arbitrarily named directory anywhere.  Not bad.  But how\nempty directory could be usefull?  No way.  And it's writable only\nby root... hm.  Suddenlly, friend Jay drops by and asks what's up.\nExplain him our advances so far.  Jay isn't so much of a hacker,\nbut he's curious anyway.  What permissions that directory has, he\nasks?  Really, let's take a look.  drwxr-xr-x -- why so?  Wait a\nmoment, what is our umask?  Bull's eye.  umask 000; cdplayer\n-dbcdir /etc/test.  drwxrwxrwx.  Cool. Well, yeah, but what now?\nWe can write whatever we want to an arbitrary directory in\narbitrary place -- if it doesn't exist already.  Sounds pretty\nuseless.  Well, it's time to take a little break, relax, chat,\nenjoy some spare time.  Rested, we continue.  We were we?  Uhu.\nSome thinking reveals that indeed all that we have earned so far is\npretty useless -- on an ideal OS.  But we deal with Irix, which is\npretty far from this nice state and more close to opposite,\nuser-friendly OS.\n\nSome scientists say that humans only use fraction of their brain,\nthe rest is there but isn't being used.  What is true about humans\nis usually true about things that humans create, in particular\n/etc/passwd files.  Lets take a peek.  Right near the top, we see\nan interesting line\n\nsysadm:*:0:0:System V Administration:/usr/admin:/bin/sh\n\nwow.  uid 0.  But it's starred out.  And home directory doesn't\nexist.  DOESN'T EXIST?  He he.  One call to our friend cdplayer,\nand it does.  Now what?  .forward?  Doesn't work, sysadm is in\n/etc/aliases.  More chatting with Jay, and suddenly it strikes me\n-- why I'm so stupid?  Why I first think about .forward, not about\nobvious things?\n\necho \"+ +\" >/usr/admin/.rhosts\n\nAs fingers type, lips are telling Jay that it's not going to work.\nYep, it doesn't, .rhosts have to be owned by the home directory\nowner, i.e.  sysadm.  But we're almost there.  Last effort --\nrecall it's Irix, and it's user-friendly.  Remember, some time ago\nsomebody on bugtraq (or was it linux-security?) asked what is bad\nin giving away your own file.  Well, here's a live demo\n\nchown root.sys /usr/admin/.rhosts\nrsh localhost -l sysadm\n\nand we enjoy that wonderful, sweet, warm feeling every hacker gets\nwhen he sees # as his command prompt.  When the machine is\nfriend's, where he doesn't have root access, which is the case.\nNot anymore.\n\nSo what's the moral of that long lousy story?  Few seemingly minor\nproblems: cdplayer gives up root priorities a little too late,\nunused account with uid 0 in passwd, chown not restricted in\ndefault kernel config -- small pieces make a big picture.  The\nmoral is that cdplayer shouldn't be suid -- why cdman isn't and\nstill it works? sysadm account shouldn't be there and shouldn't\nhave real shell for sure, chown should be restricted by default.\nBut the way it is, a standard Irix 5.3/6.2 installation is\nvulnerable.",
  "ID": "VU#20897",
  "IDNumber": "20897",
  "IPProtocol": "",
  "Impact": "It can be used by any local user for creating root-owned,\nworld-writable arbitrarily named directory anywhere on the system. Some other weaknesses of standard Irix configuration allow to\nconvert it to root priviledges.",
  "Keywords": [
    "cdplayer",
    "SGI",
    "setuid program",
    "world writeable directory"
  ],
  "Overview": "",
  "References": [
    "Auscert AA-96.11 SGI IRIX cdplayer Vulnerability, 22 November 1996",
    "ftp://ftp.auscert.org.au/pub/auscert/advisory/AA-96.11.SGI.cdplayer.vul"
  ],
  "Resolution": "",
  "Revision": "1",
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "",
  "Title": "SGI/cdplayer",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}