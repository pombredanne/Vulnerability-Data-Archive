{
  "Author": "This document was written by Howard Lipson.",
  "CAM_AttackerAccessRequired": "20",
  "CAM_EaseOfExploitation": "20",
  "CAM_Exploitation": "0",
  "CAM_Impact": "8",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "4",
  "CAM_ScoreCurrent": 3.6,
  "CAM_ScoreCurrentWidelyKnown": 4.8,
  "CAM_ScoreCurrentWidelyKnownExploited": 9.6,
  "CAM_WidelyKnown": "15",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2001-0766",
  "CVSS_AccessComplexity": "",
  "CVSS_AccessVector": "",
  "CVSS_Authenication": "",
  "CVSS_AvailabilityImpact": "",
  "CVSS_BaseScore": "",
  "CVSS_BaseVector": "",
  "CVSS_CollateralDamagePotential": "",
  "CVSS_ConfidentialityImpact": "",
  "CVSS_EnvironmentalScore": "",
  "CVSS_EnvironmentalVector": "",
  "CVSS_Exploitability": "",
  "CVSS_IntegrityImpact": "",
  "CVSS_RemediationLevel": "",
  "CVSS_ReportConfidence": "",
  "CVSS_SecurityRequirementsAR": "",
  "CVSS_SecurityRequirementsCR": "",
  "CVSS_SecurityRequirementsIR": "",
  "CVSS_TargetDistribution": "",
  "CVSS_TemporalScore": "",
  "CVSS_TemporalVector": "",
  "DateCreated": "2001-06-14T13:48:50-04:00",
  "DateFirstPublished": "2001-09-28T16:33:52-04:00",
  "DateLastUpdated": "2003-06-02T15:06:00-04:00",
  "DatePublic": "2001-06-10T00:00:00",
  "Description": "",
  "ID": "VU#439395",
  "IDNumber": "439395",
  "IPProtocol": "",
  "Impact": "Can bypass Apache file access protection, allowing remote unprivileged users to read privileged files.",
  "Keywords": [
    "Apache web server",
    "case sensitive",
    "Mac OS X",
    "Mac OS 10",
    "HFS+",
    "case insensitive filesystem"
  ],
  "Overview": "The Apache (1.3.14) web server's file access protection scheme can be bypassed for the Mac OS X HFS+ filesystem.",
  "References": [
    "http://www.securityfocus.com/bid/2852",
    "http://www.apple.com/downloads/macosx/apple/websharingupdate.html",
    "http://www.macintouch.com/mosxreaderreports43",
    "http://www.securityfocus.com/bid/3316",
    "http://httpd.apache.org/docs/mod/core.html#directory",
    "http://httpd.apache.org/docs/misc/security_tips.html"
  ],
  "Resolution": "Solution 1 - By default, Apache will allow access to any file mapped from a URL  You should change the default to deny all access, and then use directives to override and allow access for only those directories and files that you want to be readable. Use regular expressions with directives such as <FilesMatch> and <DirectoryMatch> to cover upper and lover case variations. Be sure to thoroughly test your directives to ensure that Apache is properly allowing or denying access. The follwing advice is from the Apache web site (http://httpd.apache.org/docs/mod/core.html#directory): Note that the default Apache access for <Directory /> is Allow from All. This means that Apache will serve any file mapped from an URL. It is recommended that you change this with a block such as <Directory /> Order Deny,Allow\n     Deny from All\n </Directory> and then override this for directories you want accessible. See the Security Tips (http://httpd.apache.org/docs/misc/security_tips.html) page for more details. Solution 2 - At least a partial fix (a shared object file \"mod_hfs_apple.so\") is available on the Apple web site as part of thr Web Sharing version 1.0 released on 7-23-2001 -- http://www.apple.com/downloads/macosx/apple/websharingupdate.html . This update fixes the problem when you specify protected directories (using the <Directory> and <Location> directives), but the fix may not work when you specify individual file names to be protected (using the <Files> directive. (See the 13-July-2001 message from Jacques Distler on the following web page: http://www.macintouch.com/mosxreaderreports43.html.) To overcome the case problem for individual filenames, you need to use the <FilesMatch> directive, and specify the filename using regular expressions that cover all upper and lower case variations. Even after applying this patch, it is recommended that you set the Apache default to deny all access, as described in solution 1 above. Solution 3 - Use the UFS (Unix File System) instead of HFS+. UFS is case sensitive, so everything works as expected. Even if you use UFS, we still recommended that you set the Apache default to deny all access, as described in solution 1 above.",
  "Revision": 53,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "This vulnerability was initially posted to the bugtraq mailing list (bugtraq ID 2852) by Stefan Arentz.",
  "Title": "Apache web server performs case sensitive filtering on Mac OS X HFS+ case insensitive filesystem",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}