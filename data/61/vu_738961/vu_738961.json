{
  "Author": "This document was written by Will Dormann.",
  "CAM_AttackerAccessRequired": "18",
  "CAM_EaseOfExploitation": "10",
  "CAM_Exploitation": "0",
  "CAM_Impact": "16",
  "CAM_InternetInfrastructure": "17",
  "CAM_Population": "18",
  "CAM_ScoreCurrent": 26.244,
  "CAM_ScoreCurrentWidelyKnown": 35.964,
  "CAM_ScoreCurrentWidelyKnownExploited": 55.404,
  "CAM_WidelyKnown": "10",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2012-0110",
  "CVSS_AccessComplexity": "M",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "P",
  "CVSS_BaseScore": 9,
  "CVSS_BaseVector": "AV:N/AC:M/Au:N/C:C/I:C/A:P",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 7.05158701933392,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:ND/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "POC",
  "CVSS_IntegrityImpact": "C",
  "CVSS_RemediationLevel": "OF",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "ND",
  "CVSS_TemporalScore": 7,
  "CVSS_TemporalVector": "E:POC/RL:OF/RC:C",
  "DateCreated": "2011-12-07T15:54:48-05:00",
  "DateFirstPublished": "2012-01-18T02:26:12-05:00",
  "DateLastUpdated": "2014-04-28T14:28:00-04:00",
  "DatePublic": "2012-01-17T00:00:00",
  "Description": "Oracle Outside In is a set of libraries that can decode over 500 different file formats. Originally written by Stellent, Outside In is now part of Oracle. The Oracle Outside In libraries are used by a variety of applications, including Oracle Fusion Middleware, Google Search Appliance, Guidance Encase Forensics, AccessData FTK, and Novell Groupwise. Outside In fails to properly handle Lotus 123 version 4 file data, which is handled on the Windows platform by the vswk4.dll library. The Linux version of Outside In uses libvs_wk4.so. Other supported platforms may use different file names. Limited testing has shown that the Lotus 123 version 4 parser in Outside in versions prior to 8.3.5.6195 and 8.3.7.77 are vulnerable.",
  "ID": "VU#738961",
  "IDNumber": "738961",
  "IPProtocol": "",
  "Impact": "By causing an application to process a specially-crafted file with the Oracle Outside In library, a remote, unauthenticated attacker may be able to execute arbitrary code with the privileges of the vulnerable application. Depending on what application is using Outside In, this may happen as the result of some user interaction, such as single-clicking on a file, or it may happen with no user interaction at all.",
  "Keywords": [
    "FOE",
    "Stellent",
    "Outside In",
    "wk4"
  ],
  "Overview": "Oracle Outside In contains an exploitable vulnerability in the Lotus 123 version 4 file parser, which can allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable system.",
  "References": [
    "http://www.oracle.com/technetwork/topics/security/cpujan2012-366304.html",
    "http://www.oracle.com/us/technologies/embedded/025613.htm",
    "http://www.oracle.com/us/corporate/Acquisitions/stellent/index.html",
    "http://support.microsoft.com/kb/2458544",
    "http://blogs.technet.com/b/srd/archive/2010/12/08/on-the-effectiveness-of-dep-and-aslr.aspx"
  ],
  "Resolution": "Apply an update These vulnerabilites are addressed in the Oracle Fusion Middleware Critical Patch Update January 2012. This update provides the Outside In Lotus 123 version 4 parser versions 8.3.5.6195, and 8.3.7.77, which address this vulnerability. Please consider the following workarounds.",
  "Revision": 28,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "This vulnerability was reported by Will Dormann of the CERT/CC.",
  "Title": "Oracle Outside In contains an exploitable vulnerability in Lotus 123 v4 parser",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "4",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 1,
  "Workarounds": "Use the Microsoft Enhanced Mitigation Experience Toolkit The Microsoft Enhanced Mitigation Experience Toolkit (EMET) can be used to help prevent exploitation of this and other vulnerabilities. Enable DEP in Microsoft Windows Consider enabling Data Execution Prevention (DEP) in supported versions of Windows. DEP should not be treated as a complete workaround, but it can mitigate the execution of attacker-supplied code in some cases. Microsoft has published detailed technical information about DEP in Security Research & Defense blog posts \"Understanding DEP as a mitigation technology\" part 1 and part 2. DEP should be used in conjunction with the application of patches or other mitigations described in this document. Note that when relying on DEP for exploit mitigation, it is important to use a system that supports Address Space Layout Randomization (ASLR) as well. ASLR is not supported by Windows XP or Windows Server 2003 or earlier. ASLR was introduced with Microsoft Windows Vista and Windows Server 2008. Please see the Microsoft SRD blog entry: On the effectiveness of DEP and ASLR for more details."
}