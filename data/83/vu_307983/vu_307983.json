{
  "Author": "This document was written by Garret Wassermann.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": [
    "CVE-2015-3269",
    "CVE-2016-2340",
    "CVE-2017-5641",
    "CVE-2017-5983",
    "CVE-2017-3199",
    "CVE-2017-3200",
    "CVE-2017-3201",
    "CVE-2017-3202",
    "CVE-2017-3203",
    "CVE-2017-3206",
    "CVE-2017-3207",
    "CVE-2017-3208"
  ],
  "CVSS_AccessComplexity": "M",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "C",
  "CVSS_BaseScore": 9.3,
  "CVSS_BaseVector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 6.299215776,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:M/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "POC",
  "CVSS_IntegrityImpact": "C",
  "CVSS_RemediationLevel": "U",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "M",
  "CVSS_TemporalScore": 8.4,
  "CVSS_TemporalVector": "E:POC/RL:U/RC:C",
  "DateCreated": "2017-02-14T14:50:34-05:00",
  "DateFirstPublished": "2017-04-04T10:54:29-04:00",
  "DateLastUpdated": "2017-04-14T11:08:00-04:00",
  "DatePublic": "2017-04-04T00:00:00",
  "Description": "Several Java implementations of Action Message Format (AMF3) are vulnerable to one or more of the following implementation errors: CWE-502: Deserialization of Untrusted Data Some Java implementations of AMF3 deserializers derive class instances from java.io.Externalizable rather than the AMF3 specification's recommendation of flash.utils.IExternalizable. A remote attacker with the ability to spoof or control an RMI server connection may be able to send serialized Java objects that execute arbitrary code when deserialized. The reporter has identified the following products and versions as being affected, and CVE ID have been assigned as follows: - Atlassian JIRA, versions from 4.2.4 prior to version\u00a06.3.0 - CVE-2017-5983\n- Flamingo amf-serializer by Exadel, version 2.2.0 - CVE-2017-3201\n- GraniteDS, version 3.1.1.GA - CVE-2017-3199\n- Pivotal/Spring spring-flex - CVE-2017-3203\n- WebORB for Java by Midnight Coders, version 5.1.1.0 - CVE-2017-3207 Products using these libraries may also be impacted. CWE-913: Improper Control of Dynamically-Managed Code Resources Some Java implementations of AMF3 deserializers may allow instantiation of arbitrary classes via their public parameter-less constructor and subsequently call arbitrary Java Beans setter methods. The ability to exploit this vulnerability depends on the availability of classes in the class path that make use of deserialization. A remote attacker with the ability to spoof or control information may be able to send serialized Java objects with pre-set properties that result in arbitrary code execution when deserialized. The reporter has identified the following products and versions as being affected, and CVE ID have been assigned as follows: - Flamingo amf-serializer by Exadel, version 2.2.0 - CVE-2017-3202\n- Flex BlazeDS , versions 4.6.0.23207 and 4.7.2 - CVE-2017-5641\n- GraniteDS, version 3.1.1.GA - CVE-2017-3200 Products using these libraries may also be impacted. CWE-611: Improper Restriction of XML External Entity Reference ('XXE') Some Java implementations of AMF3 deserializers allow external entity references (XXEs) from XML documents embedded within AMF3 messages. If the XML parsing is handled incorrectly it could potentially expose sensitive data on the server, denial of service, or server side request forgery. - Flamingo amf-serializer by Exadel, version 2.2.0 - CVE-2017-3206\n- Flex BlazeDS , version 4.6.0.23207 - CVE-2015-3269\n- GraniteDS, version 3.1.1.GA - CVE-2016-2340 (see VU#279472)\n- WebORB for Java by Midnight Coders, version 5.1.1.0 - CVE-2017-3208 Products using these libraries may also be impacted. More information is provided in the researcher's advisory.",
  "ID": "VU#307983",
  "IDNumber": "307983",
  "IPProtocol": "",
  "Impact": "A remote attacker with the ability to spoof or control a server connection may be able to send serialized Java objects that execute arbitrary code when deserialized.",
  "Keywords": [
    "amf",
    "java",
    "deserialization"
  ],
  "Overview": "Several Java implementations of AMF3 are vulnerable to insecure deserialization and XML external entities references.",
  "References": [
    "http://codewhitesec.blogspot.com/2017/04/amf.html",
    "http://openjdk.java.net/jeps/290",
    "http://www.kb.cert.org/vuls/id/279472",
    "http://www.adobe.com/go/amfspec",
    "https://cwe.mitre.org/data/definitions/502.html",
    "https://cwe.mitre.org/data/definitions/913.html",
    "https://cwe.mitre.org/data/definitions/611.html"
  ],
  "Resolution": "Apply an update if available CERT/CC recommends applying an update or patch to your product if available. Some vendors have responded that only out-of-support versions of products are impacted. In these cases, CERT/CC recommends updating your product to the latest supported version. More details are included for each vendor in the vendor records below.",
  "Revision": 90,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to Markus Wulftange for reporting this vulnerability.",
  "Title": "Action Message Format (AMF3) Java implementations are vulnerable to insecure deserialization and XML external entities references",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "2",
  "VRDA_D1_Population": "2",
  "VulnerabilityCount": 3,
  "Workarounds": "Developers should use an updated JDK Developers should use an updated Java development kit (JDK). JDK 8 update 121, JDK 7 update 131 and JDK 6 update 141 implement basic serialization blacklisting filters, while more serialization protection measures are expected in the upcoming Java 9. For more information, please see JEP 290. Developers should be suspicious of deserialized data from untrusted sources Developers should in general be very suspicious of deserialized data from an untrusted source. For best practices, see the CERT Oracle Coding Standard for Java guidelines for Serialization, especially rules SER12-J and SER13-J. Use firewall rules or filesystem restrictions System administrators may be able to mitigate this issue for some applications by restricting access to the network and/or filesystem. If an affected application utilizes an open port accepting serialized objects, restricting access to the application may help mitigate the issue."
}