{
  "Author": "This document was written by Michael Orlando.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": [
    "CVE-2012-4961",
    "CVE-2013-0101",
    "CVE-2013-0102",
    "CVE-2013-0103",
    "CVE-2013-0104",
    "CVE-2013-0105",
    "CVE-2013-0106"
  ],
  "CVSS_AccessComplexity": "H",
  "CVSS_AccessVector": "N",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "N",
  "CVSS_BaseScore": 5.4,
  "CVSS_BaseVector": "AV:N/AC:H/Au:N/C:C/I:N/A:N",
  "CVSS_CollateralDamagePotential": "LM",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 4.41958891716,
  "CVSS_EnvironmentalVector": "CDP:LM/TD:M/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "U",
  "CVSS_IntegrityImpact": "N",
  "CVSS_RemediationLevel": "U",
  "CVSS_ReportConfidence": "UC",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "M",
  "CVSS_TemporalScore": 4.1,
  "CVSS_TemporalVector": "E:U/RL:U/RC:UC",
  "DateCreated": "2012-10-01T15:10:48-04:00",
  "DateFirstPublished": "",
  "DateLastUpdated": "2014-07-02T14:43:00-04:00",
  "DatePublic": "2013-08-16T00:00:00",
  "Description": "The Stratos Identity Server acts as an Identity Provider (IdP) to realize browser-based Single Sign-On (SSO). The IdP authenticates the user and issues a SAML assertion (also referred to as security token) containing certified claims (authentication and authorization information) about the user. The assertion is sent through the web browser to a federated Service Provider (SP) which consumes the token. On the basis of this assertion the SP makes an access control decision. CVE-2012-4961 This attack relies on flaws in the IdP's SAML interface implementation and allows the adversary to steal fresh and valid assertions by spoofing the AssertionConsumerServiceURL attribute in an <AuthnRequest> message. This may allow an attacker to compromise a client's SP session. SP is a Service Provider, IdP is an Identity Provider, and UA is a User Authentication 1. UA -> Bad SP: User U navigates its web browser UA to the malicious Service Provider Bad SP. Therefore, a HTTP GET request for the corresponding URI is sent to the web server. 2. Bad SP -> SP: Hereupon, Bad SP initiates simultaneously the standard SAML Web Browser SSO Pro\u001cle with an arbitrary federated Service Provider SP by requesting a protected resource URISP . 3. SP -> Bad SP: SP determines that no valid security context (i.e. an active user session) exists. Accordingly, SP issues an authentication request <AuthnRequest(ID, SP, ACSURL)> and sends it Base64 encoded together with the RelayState URISP parameter as an HTTP 302 redirect to Bad SP. ID is a fresh randomly generated string and SP the identi\u001cer of the Service Provider. The AssertionConsumerService URL ACSURLspeci\u001ces the Endpoint to where the IdP must deliver the SAML assertion. 4. Bad SP -> UA: Bad SP acts as a proxy and changes the ACS URL in the <AuthnRequest> to BadURL, which is a URL under control of the attacker (cf. Listing 1, line 5). According to the SAML V2.0 Standard the <AuthnRequest> SHOULD be signed but in the\ncase of WSO2 this is not true. 5. UA -> IdP: Triggered by the HTTP redirect a server authenticated TLS connection is established between UA and IdP. Subsequently, UA uses the established TLS channel to transport <AuthnRequest(ID, SP, BadURL)> along with RelayState URLSP to the IdP. 6. UA <-> IdP: The IdP identi\u001ces the User with an arbitrary authentication mechanism. 7. IdP -> UA: After successful authentication the IdP creates an authentication assertion AA = fID; IdP; SP;Ug, including the unique identi\u001cer ID and the entities SP, IdP and the authenticated User U. Subsequently the whole assertion AA is signed with the IdP's private key K..1IdP . The assertion is embedded into a <AuthnResponse> message and is sent Base64 encoded in an HTML form along with the RelayState URLSP to the UA. According to the SAML Standard the IdP MUST use the AssertionConsumerService URL included in <AuthnRequest> as POST destination. 8. UA -> Bad SP: A small JavaScript embedded in the HTML form triggers a server authenticated TLS handshake and subsequently sends the <AuthnResponse> message via HTTP POST to Bad SP. 9. Bad SP -> SP: The attacker receives the fresh and valid assertion. Therefore, he/she can impersonate user U by submitting the message to the ACS URL of the attacked SP. 10. SP -> Bad SP: The SP consumes the assertion AA, veri\u001ces the XML Signature, and checks if the signature was created by a trusted IdP. Subsequently, the SP believes that User U has successfully authenticated and grants Bad SP access to the protected service or resource. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n1. HTTP GET XSS: CVE-2013-0101\nhttps://localhost:9443/carbon/entitlement/index.jsp?policyTypeFilter=ALL&policySearchString=%22+autofocus+onfocus%3Dalert%281%29+x%3D%22\" 2. HTTP POST XSS: CVE-2013-0102\nHome->Entitlement->Administration\nInsert: \" autofocus onfocus=alert(document.cookie) x=\"in \"Search Policy\" field 3. HTTP POST stored XSS: CVE-2013-0103\nMain->Entitlement->TryIt\nInsert: \" autofocus onfocus=alert(document.cookie) x=\"in \"Ressource\" field and press \"Create request\" 4. HTTP POST stored XSS: CVE-2013-0104\nHome->Manage->Security Token Service\nInsert: <script>alert(document.cookie);</script>in \"Endpoint Address*\" and press \"Apply\" 5. HTTP POST stored XSS: CVE-2013-0105\nHome->Manage->OAuth->Register New Application\nInsert: <script>alert(1);</script>in \"Application Name\" and press \"Add\". To launch XSS click \"Delete\" on corresponding entry (Home->Manage->OAuth) 6. HTTP POST stored XSS: CVE-2013-0106\nHome->Manage->SAML SSO\nInsert: <script>alert(1);</script>in field \"Issuer *\" OR \"Assertion Consumer URL *\" and press \"Add\"",
  "ID": "VU#855491",
  "IDNumber": "855491",
  "IPProtocol": "",
  "Impact": "An unauthenticated attacker could steal a user's SAML assertions.",
  "Keywords": [
    "WSO2",
    "saml",
    "acs",
    "spoofing",
    "cwe-79"
  ],
  "Overview": "WSO2 Stratos Identity Server SAML interface contains a spoofing attack vulnerability and multiple cross-site scripting vulnerabilities which could allow an attacker to steal SAML assertions or could be used to result in information leakage, privilege escalation, and/or denial of service.",
  "References": [
    "http://wso2.com/products/identity-server/",
    "http://dist.wso2.org/downloads/patches/pub/WSO2-CARBON-PATCH-3.2.0-0539.zip",
    "http://cwe.mitre.org/data/definitions/79.html"
  ],
  "Resolution": "Update The vendor has stated: Following changes were introduced to the system According to the SAML Profiles 2.0 specification section 4.1.4.1, the Identity Provider should not trust the value of <AssertionConsumerURL> in the Authentication Request message if the Identity Provider cannot verify that URL is belonged to the Service Provider. Therefore the WSO2 Identity Server will not trust the <AssertionConsumerURL> value sent in the <AuthnRequest> message. The configured AssertionConsumerService URL values loaded into the memory will never be overwritten. The configured AssertionConsumerService URL for the Service Provider and the <AssertionConsumerServiceURL> value in the SAML 2.0 <AuthnRequest> message are compared. If mismatched, then the request is logged, warned and rejected. The patch is available on WSO2's developer portal at the following URL:http://dist.wso2.org/downloads/patches/pub/WSO2-CARBON-PATCH-3.2.0-0539.zip",
  "Revision": 30,
  "SystemsAffectedPreamble": "The vendor has stated: \"This vulnerability was only available inside the WSO2 Stratos Identity Server and WSO2 Stratoslive Cloud Identity Service and not within the standalone WSO2 Identity Server.\"",
  "ThanksAndCredit": "Thanks to Andreas Mayer (Adolf W\u00fcrth GmbH & Co. KG), Vladislav Mladenov, Marcus Niemietz, and Joerg Schwenk from Horst G\u00f6rtz Institute for IT Security (Ruhr-University Bochum) for reporting this vulnerability",
  "Title": "WSO2 Stratos Identity Server SAML interface spoofing attack and cross-site scripting vulnerabilities",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "3",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}